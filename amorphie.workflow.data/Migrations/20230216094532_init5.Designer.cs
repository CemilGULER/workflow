// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using amorphie.tag.data;

#nullable disable

namespace amorphie.workflow.data.Migrations
{
    [DbContext(typeof(WorkflowDBContext))]
    [Migration("20230216094532_init5")]
    partial class init5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Instance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.HasIndex("StateName");

                    b.HasIndex("WorkflowName");

                    b.HasIndex("ZeebeFlowName");

                    b.HasIndex("EntityName", "EntityId", "WorkflowName");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceTransitionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OutputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstanceTransitionId");

                    b.ToTable("InstanceEvent");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEnterZeebeFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitZeebeFlowName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ToStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromStateName");

                    b.HasIndex("InstanceId");

                    b.HasIndex("OnEnterZeebeFlowName");

                    b.HasIndex("OnExitZeebeFlowName");

                    b.HasIndex("ToStateName");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("InstanceTransition");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEntryFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitFlowName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("OnEntryFlowName");

                    b.HasIndex("OnExitFlowName");

                    b.HasIndex("WorkflowName");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-start",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-card-password-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8340),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8340),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-security-question-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8400),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8400),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-set",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8470),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8470),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-fail",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8530),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8530),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-start",
                            BaseStatus = 2,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8880),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8880),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-active",
                            BaseStatus = 4,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8950),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8950),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-suspended",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9000),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9000),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-deactivated",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9080),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9080),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("FlowName")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.HasIndex("FlowName");

                    b.HasIndex("FromStateName");

                    b.HasIndex("ToStateName");

                    b.ToTable("Transitions");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-validate-with-card",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8590),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8590),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-validate-with-security-question",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8660),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8660),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-acp",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8710),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-card-password-valid",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8710),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-asq",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8780),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-security-question-valid",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8780),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9130),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-start",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9130),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-suspend",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9190),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9190),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-suspended",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-deactive",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9250),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9250),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-deactivated",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-activate-fs",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9310),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-suspended",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9310),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-activate-fd",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9360),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-deactivated",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9360),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        });
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName_Description")
                        .HasColumnType("text");

                    b.Property<string>("StateName_Title")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Form")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Title")
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName_Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName_Description");

                    b.HasIndex("StateName_Title");

                    b.HasIndex("TransitionName_Form");

                    b.HasIndex("TransitionName_Title");

                    b.HasIndex("WorkflowName_Title");

                    b.ToTable("Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eda9850a-786d-4e1a-9fd9-be0347a0be13"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8240),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici sifre yenileme",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8240),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("a1f85020-3ba0-47c6-9bd1-86bf253c6d72"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User Password Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("0de788c1-22a7-4cf3-801c-ba349bfba6dd"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8280),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8280),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("d95c0ffe-1af3-42f4-9eee-93909199dc71"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8290),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8290),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("5234c4e6-1090-4bd6-b6f7-6926f4ea8ed7"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8310),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8310),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("b9228dbc-9fe2-4d20-b5e0-da476af5b158"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8330),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8330),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("877cea51-e99a-40a5-9dd9-b3ae43c5ed9e"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8350),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8350),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("918d37b5-f88e-4c52-adb7-eecca3f7ce93"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8360),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8360),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("d8d256c4-31b8-4b58-9735-0b96ef349fde"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8380),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8380),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("e6fb0146-6b9d-4002-8231-0ba1b42dd474"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8390),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card password valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8390),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("dd5d7ae0-44f3-4056-8529-4e2ab770a230"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8410),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8410),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("2beb7a3f-4551-4154-82ac-90b07e666db3"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8420),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security Question Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8420),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("eff197e0-15a9-4c3c-b55c-844b18d997b2"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8430),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8430),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("db566c7b-35b7-4df9-b8ac-2891e862fb72"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8450),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security question valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8450),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("bb8987a5-8d2a-4ea0-81d2-e6f85e9c7f55"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8490),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Degisti",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8490),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("4ff7c01d-c5d2-497b-ae60-5e8b7cbf9fcb"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8500),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password Was Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8500),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("bc91c621-6a14-4653-b948-52c2849662d1"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8510),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellendi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8510),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("d5081144-e89b-4af4-8a38-b8287ae10a64"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8520),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8520),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("c747abb5-5f3a-46f8-9632-1739742a5694"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8550),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart veya Guvenlik Sorusu Dogrulanamadi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8550),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("24bba205-e38d-455e-82bb-148d69611f37"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8560),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Or Security Question Not Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8560),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("49f183da-9c0e-4efe-a620-5e9b8da2072c"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8570),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellenemedi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8570),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("1cf4f0e4-ee43-437e-bb79-3aa0b9a965d9"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8590),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was NOT reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8590),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("f96f356f-03c8-43ad-9a4c-d40f12d54023"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8610),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8610),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("907756a4-8af0-419b-9144-763a78a12a0a"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8620),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Card Pin",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8620),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("17960b6f-d2b7-4d3d-a124-acaa32bdc1a5"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8640),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8640),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("22456683-5534-4c96-a48b-1b717cb485ba"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8650),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8650),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("6e4c27ee-dc0d-4095-a6bf-c13501d6010a"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8670),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8670),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("48901678-749d-445e-916c-69532bfea39b"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8680),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Security Question",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8680),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("f00028a0-abb4-4d8c-a2af-3a0f24759c56"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8700),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8700),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("0847d6fd-60c6-4cbf-be50-f4c6695e8673"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8710),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8710),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("20a9dbd8-ae57-4d15-9390-9489187b898e"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8730),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8730),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("3b671d47-40a4-4df1-a9be-e275f5e31ae8"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8740),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8740),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("cef35454-e0f7-4ccf-9a5d-a1bb31d9f0c2"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8760),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8760),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("11d8bd04-8848-4bdf-8c1a-26969be69e2f"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8770),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8770),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("8a39e8d0-c636-4601-b25e-8bf664ed8077"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8790),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8790),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("99b2977b-4740-45e1-bff7-32d37b7d239e"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8800),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8800),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("2cb10675-9f61-4577-be9c-bf8159bb4bda"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8810),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8810),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("acaac065-46bd-48c6-87e2-03e6baebbf9a"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8830),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8830),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("62fa38b7-1f2c-4f35-bd49-f28353748643"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8850),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Statu Akisi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8850),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("70c069a9-3d3e-43ff-aaee-2a833b5c937f"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8860),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User State Process",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8860),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("79a3229e-392c-4d1d-8295-7319b6ff132a"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8900),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8900),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("39da7e23-5400-4c67-8b02-eae56e4aeaa3"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8910),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8910),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("1424635f-9a2c-4b36-9aa3-b837275ca9ad"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8930),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8930),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("e2f90e8a-6c56-4fb8-bb94-78b702b62bea"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8940),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8940),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("8b0a3ff8-b1a5-463c-815f-7b7c51939db7"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8960),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8960),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("23973586-e003-4f7c-9a52-2ac6c29fe9a0"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8970),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8970),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("d6e8be6c-ba6f-4437-a089-d8eb7b4550f2"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8980),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8980),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("ad5aa5e5-9793-4043-8fab-0bd742bfc1e9"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9000),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9000),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("72946d57-e3ca-4c9d-bfad-671dddd1c1bd"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9020),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9020),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("e3476fe3-987e-4629-88bc-70f4e0916c3d"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9040),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9040),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("eb782f91-4dfd-459c-93c0-937ca4435551"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9060),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9060),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("2b8a0b28-eccc-43fc-b5c1-a3d3d1a897be"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9070),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9070),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("d9731e1b-d4ca-408b-9524-905f2c3e7c96"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9090),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktif",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9090),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("374c27c9-aff3-4e9a-b00f-8119c67afe7a"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9100),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9100),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("e3b7af78-3943-444d-aafd-479a739f8751"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9110),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktive edilmis",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9120),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("71597b2b-5df1-4e26-8cd7-d7734540f343"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9130),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Record has been deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9130),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("b62bf544-219b-4938-b73c-a158a633e350"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9150),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Kaydi Tamamla",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9150),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("5d818571-b12a-4e8c-b03d-74a7655de12c"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9160),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Register User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9160),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("dbdee2b0-ab46-4047-8f41-d936a397eebb"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9170),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9170),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("107af028-142f-494d-859f-44836476a093"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9190),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9190),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("922b1c39-3168-4072-ab5a-864fc577fb8f"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9200),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Gecici Kitle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9210),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("bde556b2-157c-4f22-8b5a-8a1df9f049d2"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9220),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Suspend User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9220),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("fe84d92c-feab-41f9-9413-1c341a239135"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9230),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9230),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("cccf0bc8-8bf0-4c46-83b2-3033c88bd870"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9240),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9240),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("68acb5b6-b073-4678-8721-de5a958f5cce"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("627cb2f9-704f-4b74-9552-d3e055003d1d"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9280),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9280),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("fff4d0df-8bb5-4a94-8ff1-b75600419f2f"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9290),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9290),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("fe861fc8-6300-4276-815c-94b326c4d9d0"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9300),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("2aabf070-013e-43f9-b1fa-549c65747413"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9320),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9320),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("2a3f34ed-c434-4300-b445-e946db139c78"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9330),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9330),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("832a6611-ff01-44a9-b367-5ccb4f6f2c2a"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9340),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9340),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("de33573e-dfd6-44c3-8735-1ea12630d148"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9360),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9360),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("65cf174d-92d4-462f-b792-74769d24c241"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9380),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Aktif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9380),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("370f499c-583b-47a4-b5cc-6507bcd14708"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9390),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Activate User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9390),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("5e500871-2531-4cdb-837b-f8b67b717c1d"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9400),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9400),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("99fbbd28-178d-4744-8d0e-bef3a818c015"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9410),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(9410),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        });
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.Property<Guid?>("WorkflowEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("WorkflowEntityId");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("Workflows");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8170),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8170),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user", "security" },
                            ZeebeFlowName = "zb-user-reset-password"
                        },
                        new
                        {
                            Name = "user",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8840),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8840),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AllowOnlyOneActiveInstance")
                        .HasColumnType("boolean");

                    b.Property<int>("AvailableInStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsStateManager")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowName");

                    b.ToTable("WorkflowEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f015114-0625-434b-920c-8f8455436149"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8220),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = false,
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8220),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("b350604a-c107-434b-b5ec-0b6efe1cdf5c"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8880),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = true,
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8880),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("ZeebeFlow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAtomic")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.HasKey("Name");

                    b.ToTable("ZeebeFlow");

                    b.HasData(
                        new
                        {
                            Name = "zb-user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8110),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Gateway = "https://127.0.0.1",
                            IsAtomic = false,
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 45, 32, 529, DateTimeKind.Utc).AddTicks(8120),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Process = "<bpmn:process></bpmn:process>",
                            Tags = new[] { "idm", "user", "security" }
                        });
                });

            modelBuilder.Entity("Instance", b =>
                {
                    b.HasOne("WorkflowEntity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "State")
                        .WithMany()
                        .HasForeignKey("StateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workflow", "Workflow")
                        .WithMany()
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("State");

                    b.Navigation("Workflow");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.HasOne("InstanceTransition", "InstanceTransition")
                        .WithMany()
                        .HasForeignKey("InstanceTransitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstanceTransition");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.HasOne("State", "FromState")
                        .WithMany()
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "OnEnterZeebeFlow")
                        .WithMany()
                        .HasForeignKey("OnEnterZeebeFlowName");

                    b.HasOne("ZeebeFlow", "OnExitZeebeFlow")
                        .WithMany()
                        .HasForeignKey("OnExitZeebeFlowName");

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("FromState");

                    b.Navigation("Instance");

                    b.Navigation("OnEnterZeebeFlow");

                    b.Navigation("OnExitZeebeFlow");

                    b.Navigation("ToState");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.HasOne("ZeebeFlow", "OnEntryFlow")
                        .WithMany()
                        .HasForeignKey("OnEntryFlowName");

                    b.HasOne("ZeebeFlow", "OnExitFlow")
                        .WithMany()
                        .HasForeignKey("OnExitFlowName");

                    b.HasOne("Workflow", "Workflow")
                        .WithMany("States")
                        .HasForeignKey("WorkflowName");

                    b.Navigation("OnEntryFlow");

                    b.Navigation("OnExitFlow");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.HasOne("ZeebeFlow", "Flow")
                        .WithMany()
                        .HasForeignKey("FlowName");

                    b.HasOne("State", "FromState")
                        .WithMany("Transitions")
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName");

                    b.Navigation("Flow");

                    b.Navigation("FromState");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.HasOne("State", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("StateName_Description");

                    b.HasOne("State", null)
                        .WithMany("Titles")
                        .HasForeignKey("StateName_Title");

                    b.HasOne("Transition", null)
                        .WithMany("Forms")
                        .HasForeignKey("TransitionName_Form");

                    b.HasOne("Transition", null)
                        .WithMany("Titles")
                        .HasForeignKey("TransitionName_Title");

                    b.HasOne("Workflow", null)
                        .WithMany("Titles")
                        .HasForeignKey("WorkflowName_Title");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.HasOne("WorkflowEntity", null)
                        .WithMany("InclusiveWorkflows")
                        .HasForeignKey("WorkflowEntityId");

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.HasOne("Workflow", "Workflow")
                        .WithMany("Entities")
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Navigation("Descriptions");

                    b.Navigation("Titles");

                    b.Navigation("Transitions");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Navigation("Forms");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Navigation("Entities");

                    b.Navigation("States");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Navigation("InclusiveWorkflows");
                });
#pragma warning restore 612, 618
        }
    }
}
