// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace amorphie.workflow.data.Migrations
{
    [DbContext(typeof(WorkflowDBContext))]
    [Migration("20230224134240_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Instance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName");

                    b.HasIndex("WorkflowName");

                    b.HasIndex("ZeebeFlowName");

                    b.HasIndex("EntityName", "RecordId", "StateName");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceTransitionId")
                        .HasColumnType("uuid");

                    b.Property<string>("OutputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstanceTransitionId");

                    b.ToTable("InstanceEvent");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormData")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromStateName");

                    b.HasIndex("InstanceId");

                    b.HasIndex("ToStateName");

                    b.ToTable("InstanceTransition");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEntryFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitFlowName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("OnEntryFlowName");

                    b.HasIndex("OnExitFlowName");

                    b.HasIndex("WorkflowName");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-start",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3740),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3740),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-card-password-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3810),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3810),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-security-question-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3880),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3880),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-set",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3930),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3930),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-fail",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4000),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4000),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-start",
                            BaseStatus = 2,
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4360),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4360),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-active",
                            BaseStatus = 4,
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4420),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4420),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-suspended",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4470),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4470),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-deactivated",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4530),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4530),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("FlowName")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("FlowName");

                    b.HasIndex("FromStateName");

                    b.HasIndex("ToStateName");

                    b.ToTable("Transitions");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-validate-with-card",
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4050),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4050),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-validate-with-security-question",
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4120),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4120),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-acp",
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4180),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-card-password-valid",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4180),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-asq",
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4240),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-security-question-valid",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4240),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4590),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FlowName = "user-register",
                            FromStateName = "user-start",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4590),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        },
                        new
                        {
                            Name = "user-suspend",
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4650),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4650),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-suspended"
                        },
                        new
                        {
                            Name = "user-deactive",
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4710),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4710),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-deactivated"
                        },
                        new
                        {
                            Name = "user-activate-fs",
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4760),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-suspended",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4760),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        },
                        new
                        {
                            Name = "user-activate-fd",
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4820),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-deactivated",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4820),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        });
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName_Description")
                        .HasColumnType("text");

                    b.Property<string>("StateName_Title")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Form")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Title")
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName_Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName_Description");

                    b.HasIndex("StateName_Title");

                    b.HasIndex("TransitionName_Form");

                    b.HasIndex("TransitionName_Title");

                    b.HasIndex("WorkflowName_Title");

                    b.ToTable("Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b38b9e25-4aa5-4310-b22a-1a740895c1bc"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3720),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici sifre yenileme",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3720),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("830bab27-8039-4db3-b2fe-1c979dfc9dd4"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3730),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User Password Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3730),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("d5a6f636-5cc1-4db7-af8c-c1786c1dff3a"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3760),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3760),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("e7db1968-5831-4e4b-b05f-4fe2a369571c"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3770),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3770),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("3b05b84e-b83a-4304-8dbd-4c72a328466e"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3790),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3790),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("2fbfd663-62d2-45a1-b318-72e93a2e8c44"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3800),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3800),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("f270e8ad-7b1f-4a26-812e-81227e50c050"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3820),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3820),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("2e3f9d09-e878-44eb-b42a-43bd16dd3279"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3840),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3840),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("38499b93-d396-498f-bad3-4b4122419211"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3850),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3850),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("dd0d49c0-8ae5-4d5d-b5ac-c1d31c4a4f86"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3870),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card password valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3870),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("f2edeb48-05b3-4ab7-a0d2-309c2b381670"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3890),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3890),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("babde9bb-6f4f-46ff-baf0-865d6135092e"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3900),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security Question Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3900),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("f4823823-0048-45c6-aba7-5e2ae744b140"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3910),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3910),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("83e3dc48-3b0b-4f2c-a7c7-87ea438af050"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3930),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security question valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3930),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("95fb1832-9ab9-4ab0-8fb8-ead11d4e7b5a"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3950),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Degisti",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3950),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("d14f6b88-121e-4430-a4ac-6b468d37f8e8"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3960),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password Was Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3960),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("e609cbd4-67de-4ee5-a2e4-211a35e28a90"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3970),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellendi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3970),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("7eabdaf9-5b2d-400a-8480-91a178c7d934"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3990),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3990),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("76a31af1-3f6b-4e05-8287-5eb91677c1d7"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4010),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart veya Guvenlik Sorusu Dogrulanamadi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4010),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("83a2e7fa-4886-4a31-b416-b1aba3088b1c"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4020),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Or Security Question Not Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4020),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("17ce83ba-3bbe-42c6-8660-565e424a374d"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4030),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellenemedi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4030),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("ced78b37-9b71-4949-82b5-11c28f28824b"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4050),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was NOT reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4050),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("1b622072-6aab-42d1-9bb0-435735002b03"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4070),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4070),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("ed2c8b64-c0a1-4eae-93c1-27b44c155a84"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4080),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Card Pin",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4080),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("3bb6fd99-d6d5-4ba0-b0d6-29ffb045e385"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4100),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4100),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("abb1b3c7-7b63-4e1c-a9f2-88a7322285a0"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4110),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4110),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("db3e9f3f-25fb-4c78-a7e0-05647c56a03d"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4130),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4130),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("18bca9c3-b3df-4aa6-983c-ac6950b1ab00"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4150),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Security Question",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4150),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("91c2f1f5-71c2-44b9-8902-a6ff42d97ce1"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4160),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4160),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("699c6853-95d2-4a9e-832a-ae43ed06880a"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4170),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4170),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("2f4a8caf-81cf-4a86-84ab-a5059a95b0b0"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4190),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4190),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("15d9a162-45b7-4a01-8224-5f5f3bd0f4b1"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4210),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4210),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("1b3d3f9c-35e8-4ccc-bf8b-407c140f73eb"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4220),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4220),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("c96c97d8-9b39-4428-b2c3-ccb52ca61af3"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4230),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4230),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("aa269eb0-6b19-41a3-b6c0-ac49ada6317b"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4250),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4250),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("3364f765-d964-4976-adac-403a0aac89e0"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("00035bcf-79d8-4d9a-b29c-4d9a55cec533"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4280),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4280),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("a0601857-c9f3-44cd-9bdd-01af0f962a66"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4290),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4290),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("27f6669e-1b29-40d6-a551-a25bf93b7f19"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4320),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Statu Akisi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4320),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("54c8c998-0ef8-4444-a6de-f9375525a461"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4340),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User State Process",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4340),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("19c32298-164f-4582-ad80-3ac4700d067e"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4370),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4370),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("c5a5e8f4-5143-4130-b4f4-9a0cff92756b"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4380),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4380),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("096ab922-11be-4349-81ba-dbbec2108372"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4390),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4390),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("1a692c6f-9ded-4cb5-9932-e4a1c5b313cf"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4410),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4410),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("58cecb04-3ff0-4704-97e8-2da90f7e08f3"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4430),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4430),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("f4b2570a-216c-4dcb-846b-bdf547dad3dd"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4440),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4440),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("cf83c5c5-b714-476c-9747-bc8371b7f50e"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4450),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4450),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("841da2ed-858d-4a56-b3f8-d431b1173915"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4470),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4470),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("9b40213d-fadb-4772-aa7b-5f22828e47c0"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4490),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4490),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("118d851f-7108-4e6d-ba3c-db7579e7adb6"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4500),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4500),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("1ddd4e75-e5a7-4218-9c1b-f943c098c6a6"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4510),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4510),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("fb59e962-e530-4ec7-a04a-9078c15bda4d"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4520),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4520),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("47b434fc-7caf-4454-95ea-fa6497133335"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4550),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktif",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4550),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("10d64dd3-38b7-4541-83d7-914d338afe6e"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4560),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4560),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("a73acbd3-8116-4097-9bfd-e3d538fd351f"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4570),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktive edilmis",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4570),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("330b40cb-9179-4414-9ac5-d8bc41f0ee1f"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4580),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Record has been deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4580),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("e18c5b70-c1c2-4ace-ac4e-2a37a8040640"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4600),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Kaydi Tamamla",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4600),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("c16230c8-a1dc-435e-9d40-7a3efe7ce56b"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4610),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Register User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4610),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("42d644a5-b59b-4561-946b-1f292e84a9dc"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4630),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4630),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("8a716443-62b4-4e17-8e22-6f063c3aa5c9"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4640),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4640),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("d8377a9b-89c4-4881-adcc-602c09d78ca3"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4660),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Gecici Kitle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4660),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("d393fd93-397f-4de0-b60f-6c29a443142d"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4670),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Suspend User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4670),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("827d0faf-31c1-48d6-82d8-1647e0fa6969"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4690),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4690),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("b1dd6f42-e2fb-43f1-92d4-c5fa83057523"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4700),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4700),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("2b43c349-956d-4cc6-9b72-3917ddd295c2"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4720),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4720),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("1d03a93b-2bbe-46fe-82ea-2c931e164bfa"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4730),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4730),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("226ae314-0eb4-4c1d-8cef-70245903350e"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4750),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4750),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("74ee1f32-91e6-47e2-bc01-ad003261ff69"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4760),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4760),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("7434d8a2-98c5-4a4f-a600-3658cfc3fba6"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4780),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4780),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("d5b47376-64a0-43fc-904c-4a51b4b04807"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4790),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4790),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("85f8b03d-5ca3-42d6-8b70-c6a85d553ea4"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4800),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4800),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("69ecd83f-2e29-405d-8445-99fab98d7b96"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4810),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4810),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("9899b900-3539-4bfa-a529-54307885dd92"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4830),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Aktif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4830),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("84d410d6-495f-4780-9e86-442a27c52714"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4850),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Activate User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4850),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("a4e8af1f-a4a4-47a2-8771-83520d4437c6"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4860),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4860),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("05a79c39-8680-4a10-9d1a-c2ca378608f0"),
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4870),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4870),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        });
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.Property<Guid?>("WorkflowEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("WorkflowEntityId");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("Workflows");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3620),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3630),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user", "security" }
                        },
                        new
                        {
                            Name = "user",
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4310),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4310),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AllowOnlyOneActiveInstance")
                        .HasColumnType("boolean");

                    b.Property<int>("AvailableInStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsStateManager")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowName");

                    b.ToTable("WorkflowEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6ae29e8d-98ae-434b-a5f9-e25ce0971301"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3700),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = false,
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(3700),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("724db99a-d2d4-41f3-a4b1-cdb07ca6357b"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4350),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = true,
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4350),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("ZeebeMessage", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.HasKey("Name");

                    b.ToTable("ZeebeMessage");

                    b.HasData(
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Gateway = "zeebe-local",
                            Message = "simple-flow-starter",
                            ModifiedAt = new DateTime(2023, 2, 24, 13, 42, 39, 849, DateTimeKind.Utc).AddTicks(4300),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Process = "Process_Simple",
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("Instance", b =>
                {
                    b.HasOne("State", "State")
                        .WithMany()
                        .HasForeignKey("StateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workflow", "Workflow")
                        .WithMany()
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeMessage", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("State");

                    b.Navigation("Workflow");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.HasOne("InstanceTransition", "InstanceTransition")
                        .WithMany()
                        .HasForeignKey("InstanceTransitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstanceTransition");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.HasOne("State", "FromState")
                        .WithMany()
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromState");

                    b.Navigation("Instance");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.HasOne("ZeebeMessage", "OnEntryFlow")
                        .WithMany()
                        .HasForeignKey("OnEntryFlowName");

                    b.HasOne("ZeebeMessage", "OnExitFlow")
                        .WithMany()
                        .HasForeignKey("OnExitFlowName");

                    b.HasOne("Workflow", "Workflow")
                        .WithMany("States")
                        .HasForeignKey("WorkflowName");

                    b.Navigation("OnEntryFlow");

                    b.Navigation("OnExitFlow");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.HasOne("ZeebeMessage", "Flow")
                        .WithMany()
                        .HasForeignKey("FlowName");

                    b.HasOne("State", "FromState")
                        .WithMany("Transitions")
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName");

                    b.Navigation("Flow");

                    b.Navigation("FromState");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.HasOne("State", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("StateName_Description");

                    b.HasOne("State", null)
                        .WithMany("Titles")
                        .HasForeignKey("StateName_Title");

                    b.HasOne("Transition", null)
                        .WithMany("Forms")
                        .HasForeignKey("TransitionName_Form");

                    b.HasOne("Transition", null)
                        .WithMany("Titles")
                        .HasForeignKey("TransitionName_Title");

                    b.HasOne("Workflow", null)
                        .WithMany("Titles")
                        .HasForeignKey("WorkflowName_Title");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.HasOne("WorkflowEntity", null)
                        .WithMany("InclusiveWorkflows")
                        .HasForeignKey("WorkflowEntityId");

                    b.HasOne("ZeebeMessage", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.HasOne("Workflow", "Workflow")
                        .WithMany("Entities")
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Navigation("Descriptions");

                    b.Navigation("Titles");

                    b.Navigation("Transitions");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Navigation("Forms");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Navigation("Entities");

                    b.Navigation("States");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Navigation("InclusiveWorkflows");
                });
#pragma warning restore 612, 618
        }
    }
}
