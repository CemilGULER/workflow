// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace amorphie.workflow.data.Migrations
{
    [DbContext(typeof(WorkflowDBContext))]
    [Migration("20230221132806_MigrationsTest")]
    partial class MigrationsTest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Instance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName");

                    b.HasIndex("WorkflowName");

                    b.HasIndex("ZeebeFlowName");

                    b.HasIndex("EntityName", "RecordId", "StateName");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceTransitionId")
                        .HasColumnType("uuid");

                    b.Property<string>("OutputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstanceTransitionId");

                    b.ToTable("InstanceEvent");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FieldUpdates")
                        .HasColumnType("text");

                    b.Property<string>("FormData")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEnterZeebeFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitZeebeFlowName")
                        .HasColumnType("text");

                    b.Property<string>("ToStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromStateName");

                    b.HasIndex("InstanceId");

                    b.HasIndex("OnEnterZeebeFlowName");

                    b.HasIndex("OnExitZeebeFlowName");

                    b.HasIndex("ToStateName");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("InstanceTransition");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEntryFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitFlowName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("OnEntryFlowName");

                    b.HasIndex("OnExitFlowName");

                    b.HasIndex("WorkflowName");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-start",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2485),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2486),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-card-password-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2596),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2597),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-security-question-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2684),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2685),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-set",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2763),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2764),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-fail",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2854),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2854),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-start",
                            BaseStatus = 2,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3427),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3428),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-active",
                            BaseStatus = 4,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3509),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3510),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-suspended",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3596),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3597),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-deactivated",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3810),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3811),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("FlowName")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("FlowName");

                    b.HasIndex("FromStateName");

                    b.HasIndex("ToStateName");

                    b.ToTable("Transitions");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-validate-with-card",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2939),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2939),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-validate-with-security-question",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3049),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3050),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-acp",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3134),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-card-password-valid",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3135),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-asq",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3228),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-security-question-valid",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3229),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3907),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FlowName = "user-register",
                            FromStateName = "user-start",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3908),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        },
                        new
                        {
                            Name = "user-suspend",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4005),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4006),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-suspended"
                        },
                        new
                        {
                            Name = "user-deactive",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4094),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4095),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-deactivated"
                        },
                        new
                        {
                            Name = "user-activate-fs",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4179),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-suspended",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4180),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        },
                        new
                        {
                            Name = "user-activate-fd",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4270),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-deactivated",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4270),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        });
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName_Description")
                        .HasColumnType("text");

                    b.Property<string>("StateName_Title")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Form")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Title")
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName_Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName_Description");

                    b.HasIndex("StateName_Title");

                    b.HasIndex("TransitionName_Form");

                    b.HasIndex("TransitionName_Title");

                    b.HasIndex("WorkflowName_Title");

                    b.ToTable("Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("205b4c22-02e3-4055-a853-cb8a7c00ceef"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2439),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici sifre yenileme",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2440),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("5194138b-aef7-48ff-b94c-617c0c4c9e2b"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2466),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User Password Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2466),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("a867a23f-e78d-47f8-8633-5b9f460bcadc"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2508),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2509),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("0008f976-3886-4d64-a510-64445db3ed50"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2530),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2531),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("f512ce7e-ef4f-4104-8294-9574f810d1db"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2555),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2556),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("c2903b0c-9668-4297-8027-dc1bc64974a7"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2581),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2581),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("5b3b6558-60ee-4b9f-9308-6af2e012822d"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2614),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2615),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("265bd64e-6397-4307-862a-fa57707901ae"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2631),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2632),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("abb40dfd-f2d6-4e39-b619-571f24534c0d"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2651),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2652),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("38e11762-7523-4585-93a1-91c3c29cfe12"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2670),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card password valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2671),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("10a82c7f-2742-44f1-9e5f-1a66d95847eb"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2702),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2703),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("8fc7b7d5-ebe1-4a06-bb0d-9fe2395dc4df"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2717),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security Question Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2718),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("8f6356b2-4490-49b0-96cf-e443c2d17301"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2734),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2734),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("c13734db-0425-47e6-8bc6-1b7416546a97"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2749),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security question valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2750),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("4493848b-ba42-472f-ae0b-68f84caaabaf"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2780),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Degisti",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2780),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("68513187-53eb-40f5-a616-197c9d6e6e63"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2795),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password Was Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2796),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("f3ab742a-8bb4-457a-9423-aa8ca6b1fe5f"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2816),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellendi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2817),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("4adb5793-6027-481e-835e-f2071ebf4d93"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2838),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2839),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("c187463d-dad2-4e26-b3dd-d2cd07d5c3ee"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2874),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart veya Guvenlik Sorusu Dogrulanamadi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2875),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("8cfe2943-c827-4d74-8c00-33de8fbbec74"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2889),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Or Security Question Not Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2890),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("2ce2be81-3d0b-48de-be7c-d32aab4208dd"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2906),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellenemedi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2907),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("2bca8579-6b0e-4bc8-a4e9-e2975f78167b"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2924),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was NOT reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2924),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("151c937a-e211-4f84-a6f0-b41d54bbfe97"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2966),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2967),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("9e05f778-dd1d-4181-a401-25def73faebb"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2989),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Card Pin",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2990),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("4a24568c-e7da-4c3c-abd5-2ef129e022b3"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3012),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3013),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("531af2f8-5b40-44ec-9e2d-c2d1b39ce385"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3034),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3035),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("6a510ddd-fff9-4e89-9ada-ecf0b32557ae"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3065),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3066),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("b1f8aabd-0459-4202-9ce7-bbb43dc62c36"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3081),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Security Question",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3082),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("48ea4936-e09b-4f55-98e6-a64f7329a29d"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3100),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3101),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("66c9ef94-8086-4ade-adfa-6e35f505a39c"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3116),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3117),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("5b495af5-5241-4830-a0b7-a1fef4efcbfc"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3151),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3152),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("1f694213-2ec2-4739-8ae5-1106d59d0cce"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3169),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3170),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("910bb885-bd0b-46ac-a6b4-3a666cf3b9c6"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3191),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3192),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("3bf21227-6801-4c19-b91d-e846f0cc7abd"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3211),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3212),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("638f6000-53e3-4bb2-9cf4-19014b5b8b25"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3246),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3247),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("697f9f1d-5b66-4dae-9538-d1eb50b81117"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3262),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3263),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("ba9988f7-9cd1-41be-9730-317e08964fae"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3280),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3280),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("784f0ae5-e3f2-45fe-b49e-d675c4eb54fd"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3296),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3297),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("36b4fcfb-7aa7-4a05-a217-48d8f911f130"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3366),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Statu Akisi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3367),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("20776c2d-9e5f-40d1-9e2c-414fda39cf6e"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3385),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User State Process",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3386),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("9709518d-e9cb-4a06-843b-7ff3d889efa6"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3444),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3445),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("10e5a934-fe44-46a0-b987-81866cb56861"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3460),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3461),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("58a9651f-3cb1-4426-aa83-f67251285b7c"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3477),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3478),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("06817e43-0fef-412f-ad91-bec0da19cf5a"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3493),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3494),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("ad9cca2b-abda-44c1-aeff-ad3c629b0f10"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3528),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3529),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("1c630eec-69c1-49bc-9a36-c24fbe54ae4d"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3546),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3547),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("52d3144a-f55e-4566-a97f-d1a6b5f896e8"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3561),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3562),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("7a9682e9-39ea-4044-9a70-0ed2fc8a33ed"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3581),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3581),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("81899d96-130f-4d1b-9754-91d3732d0f56"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3613),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3615),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("23ab09a4-276e-4c50-9ad2-6ddbffbf0f10"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3629),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3629),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("5e6e81cb-27f2-48ab-b51f-bd881d5f61ae"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3647),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3648),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("fe1cb1e3-f021-4a5b-81de-b6727c3dd5d6"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3664),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3665),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("fd72f63c-8eb3-4c86-bdac-2e96d09ead17"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3834),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktif",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3835),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("945dcc0c-e279-41fc-9be5-4a06e2a2177c"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3852),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3853),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("05b07adc-0287-43ea-9fb1-47c9dde8c9a4"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3869),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktive edilmis",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3870),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("d9c38ede-9d06-475a-9922-6eb024ecf2ca"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3890),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Record has been deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3891),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("e308f686-31ac-4597-8f89-cad510f3b89b"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3932),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Kaydi Tamamla",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3933),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("0a1a295f-81a8-4107-8d29-139ecf21d100"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3950),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Register User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3951),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("51fd24e8-c585-41eb-aac8-b9eae105aba9"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3974),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3975),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("7920e726-2f63-4ef9-bf26-232053dbfdbb"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3990),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3991),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("52216830-f711-431d-9a6d-92e98fa9b788"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4026),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Gecici Kitle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4027),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("adb9ca8a-3adf-43ac-a690-4695030aad00"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4041),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Suspend User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4042),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("fa6c9e1c-1b6f-4ce5-bdbf-6b34a2300031"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4058),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4059),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("8872807e-01b3-478d-ac9d-366ef61019d8"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4078),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4079),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("f397061d-f94f-4685-940c-1ed9aac68ec6"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4112),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4112),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("611c7aed-0c21-408b-9d97-4e2bfd6d5225"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4133),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4134),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("2a210647-9c1b-460e-87fe-b46627a5745b"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4149),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4150),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("f4fa25f0-8dfc-4fce-a9e8-4dfc8d9a3916"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4165),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4166),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("45a41424-7eeb-406c-8aa9-c3b7acfef623"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4197),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4198),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("b8dd140f-84e5-436a-a474-7acffd40dce4"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4215),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4215),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("95be0e13-cfd1-44e2-a67e-91e22090baf7"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4231),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4232),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("b65b5d66-82c7-4a6d-ba13-c09bb9253aaf"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4254),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4255),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("77bc38f7-8d82-451e-a3a7-9e5e85c92e20"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4291),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Aktif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4292),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("59d468b9-2574-4659-81ed-fc0edb5db4fc"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4308),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Activate User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4309),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("a500fce2-17fb-42c3-8971-bc8f47704ef8"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4325),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4326),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("17a54ff2-c732-4e95-8873-02de39a5f024"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4349),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(4350),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        });
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.Property<Guid?>("WorkflowEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("WorkflowEntityId");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("Workflows");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2306),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user", "security" }
                        },
                        new
                        {
                            Name = "user",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3350),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3350),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AllowOnlyOneActiveInstance")
                        .HasColumnType("boolean");

                    b.Property<int>("AvailableInStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsStateManager")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowName");

                    b.ToTable("WorkflowEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b516f575-9d72-4fcd-89b8-250d0fb3f55e"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2398),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = false,
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(2399),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("820a17a5-c34a-486e-81ec-b3517c7e1d2d"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3412),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = true,
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3413),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("ZeebeFlow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.HasKey("Name");

                    b.ToTable("ZeebeFlow");

                    b.HasData(
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3325),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Gateway = "zeebe-local",
                            Message = "simple-flow-starter",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 28, 6, 425, DateTimeKind.Utc).AddTicks(3326),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Process = "Process_Simple",
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("Instance", b =>
                {
                    b.HasOne("State", "State")
                        .WithMany()
                        .HasForeignKey("StateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workflow", "Workflow")
                        .WithMany()
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("State");

                    b.Navigation("Workflow");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.HasOne("InstanceTransition", "InstanceTransition")
                        .WithMany()
                        .HasForeignKey("InstanceTransitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstanceTransition");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.HasOne("State", "FromState")
                        .WithMany()
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "OnEnterZeebeFlow")
                        .WithMany()
                        .HasForeignKey("OnEnterZeebeFlowName");

                    b.HasOne("ZeebeFlow", "OnExitZeebeFlow")
                        .WithMany()
                        .HasForeignKey("OnExitZeebeFlowName");

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("FromState");

                    b.Navigation("Instance");

                    b.Navigation("OnEnterZeebeFlow");

                    b.Navigation("OnExitZeebeFlow");

                    b.Navigation("ToState");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.HasOne("ZeebeFlow", "OnEntryFlow")
                        .WithMany()
                        .HasForeignKey("OnEntryFlowName");

                    b.HasOne("ZeebeFlow", "OnExitFlow")
                        .WithMany()
                        .HasForeignKey("OnExitFlowName");

                    b.HasOne("Workflow", "Workflow")
                        .WithMany("States")
                        .HasForeignKey("WorkflowName");

                    b.Navigation("OnEntryFlow");

                    b.Navigation("OnExitFlow");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.HasOne("ZeebeFlow", "Flow")
                        .WithMany()
                        .HasForeignKey("FlowName");

                    b.HasOne("State", "FromState")
                        .WithMany("Transitions")
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName");

                    b.Navigation("Flow");

                    b.Navigation("FromState");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.HasOne("State", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("StateName_Description");

                    b.HasOne("State", null)
                        .WithMany("Titles")
                        .HasForeignKey("StateName_Title");

                    b.HasOne("Transition", null)
                        .WithMany("Forms")
                        .HasForeignKey("TransitionName_Form");

                    b.HasOne("Transition", null)
                        .WithMany("Titles")
                        .HasForeignKey("TransitionName_Title");

                    b.HasOne("Workflow", null)
                        .WithMany("Titles")
                        .HasForeignKey("WorkflowName_Title");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.HasOne("WorkflowEntity", null)
                        .WithMany("InclusiveWorkflows")
                        .HasForeignKey("WorkflowEntityId");

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.HasOne("Workflow", "Workflow")
                        .WithMany("Entities")
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Navigation("Descriptions");

                    b.Navigation("Titles");

                    b.Navigation("Transitions");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Navigation("Forms");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Navigation("Entities");

                    b.Navigation("States");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Navigation("InclusiveWorkflows");
                });
#pragma warning restore 612, 618
        }
    }
}
