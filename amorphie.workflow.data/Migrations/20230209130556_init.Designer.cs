// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using amorphie.tag.data;

#nullable disable

namespace amorphie.workflow.data.Migrations
{
    [DbContext(typeof(WorkflowDBContext))]
    [Migration("20230209130556_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("State", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("WorkflowName");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Name = "retail-loan-start",
                            BaseStatus = 0,
                            CreatedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9580),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9580),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "retail-loan"
                        },
                        new
                        {
                            Name = "retail-loan-finish",
                            BaseStatus = 0,
                            CreatedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9670),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9670),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "retail-loan"
                        });
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Form")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .HasColumnType("text");

                    b.Property<string>("Gateway")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Process")
                        .HasColumnType("text");

                    b.Property<string>("ToStateName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.HasIndex("FromStateName");

                    b.HasIndex("ToStateName");

                    b.ToTable("Transition");
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName_Description")
                        .HasColumnType("text");

                    b.Property<string>("StateName_Title")
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName_Title")
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName_Transition")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName_Description");

                    b.HasIndex("StateName_Title");

                    b.HasIndex("WorkflowName_Title");

                    b.HasIndex("WorkflowName_Transition");

                    b.ToTable("Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("887f29c3-6bf7-43bd-9bd5-5f2ec99c32e7"),
                            CreatedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9560),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Bireysel Kredi Sureci",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9560),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "retail-loan"
                        },
                        new
                        {
                            Id = new Guid("2a8214b5-59fa-40f6-8aad-2ec86bf76e6c"),
                            CreatedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9570),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Retail Loan Process",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9570),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "retail-loan"
                        },
                        new
                        {
                            Id = new Guid("1d887c71-134b-4560-9eab-cd51b687dc02"),
                            CreatedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9620),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9620),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "retail-loan-start"
                        },
                        new
                        {
                            Id = new Guid("e1e99dff-02ac-4294-8b7c-28c264857998"),
                            CreatedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9630),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9630),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "retail-loan-start"
                        },
                        new
                        {
                            Id = new Guid("4eaafdef-f2fe-4234-b369-1b8c2d208233"),
                            CreatedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9650),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kredi sureci akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9650),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "retail-loan-start"
                        },
                        new
                        {
                            Id = new Guid("367941d5-0526-4979-95ab-b02b5899af25"),
                            CreatedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9660),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Retail Loan Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9660),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "retail-loan-start"
                        },
                        new
                        {
                            Id = new Guid("70c103ae-571d-43a7-97de-553d85f14dcd"),
                            CreatedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9680),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis bitis asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9680),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "retail-loan-finish"
                        },
                        new
                        {
                            Id = new Guid("c7f1f24e-8269-411d-a739-3080e87d3873"),
                            CreatedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9700),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Finish state",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9700),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "retail-loan-finish"
                        },
                        new
                        {
                            Id = new Guid("03361d4a-5f3b-4381-a498-45e027c6fef2"),
                            CreatedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9710),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kredi sureci akis bitis asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9710),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "retail-loan-finish"
                        },
                        new
                        {
                            Id = new Guid("c160d062-0352-409f-9e16-fca1e48724e4"),
                            CreatedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9720),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Retail loan finis state",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9720),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "retail-loan-finish"
                        },
                        new
                        {
                            Id = new Guid("6885a406-084e-4347-b963-495dad5625b1"),
                            CreatedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9750),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Statu Akisi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9750),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-lifecyle"
                        },
                        new
                        {
                            Id = new Guid("7d69eac6-6ec6-4d1a-b93f-bd2bd0b0e2ee"),
                            CreatedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9760),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User State Process",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9760),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-lifecyle"
                        });
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Gateway")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Process")
                        .HasColumnType("text");

                    b.Property<string>("ProcessName")
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.ToTable("Workflows");

                    b.HasData(
                        new
                        {
                            Name = "retail-loan",
                            CreatedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9440),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Gateway = "http://localhost:26500",
                            ModifiedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9450),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Process = "<bpmn:definitions>...</bpmn:definitions>",
                            ProcessName = "retail-loan-workflow",
                            Tags = new[] { "retail", "loan" },
                            Type = 200
                        },
                        new
                        {
                            Name = "user-lifecyle",
                            CreatedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9730),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 9, 13, 5, 56, 761, DateTimeKind.Utc).AddTicks(9730),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user" },
                            Type = 100
                        });
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int[]>("AvailableInStatus")
                        .HasColumnType("integer[]");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsExclusive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStateManager")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowName");

                    b.ToTable("WorkflowEntity");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.HasOne("Workflow", "Workflow")
                        .WithMany("States")
                        .HasForeignKey("WorkflowName");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.HasOne("State", "FromState")
                        .WithMany("Transitions")
                        .HasForeignKey("FromStateName");

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName");

                    b.Navigation("FromState");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.HasOne("State", null)
                        .WithMany("Description")
                        .HasForeignKey("StateName_Description");

                    b.HasOne("State", null)
                        .WithMany("Title")
                        .HasForeignKey("StateName_Title");

                    b.HasOne("Workflow", null)
                        .WithMany("Title")
                        .HasForeignKey("WorkflowName_Title");

                    b.HasOne("Transition", null)
                        .WithMany("Title")
                        .HasForeignKey("WorkflowName_Transition");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.HasOne("Workflow", "Workflow")
                        .WithMany("Entities")
                        .HasForeignKey("WorkflowName");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Navigation("Description");

                    b.Navigation("Title");

                    b.Navigation("Transitions");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Navigation("Title");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Navigation("Entities");

                    b.Navigation("States");

                    b.Navigation("Title");
                });
#pragma warning restore 612, 618
        }
    }
}
