// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace amorphie.workflow.data.Migrations
{
    [DbContext(typeof(WorkflowDBContext))]
    [Migration("20230220164034_init1")]
    partial class init1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Instance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName");

                    b.HasIndex("WorkflowName");

                    b.HasIndex("ZeebeFlowName");

                    b.HasIndex("EntityName", "RecordId", "StateName");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceTransitionId")
                        .HasColumnType("uuid");

                    b.Property<string>("OutputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstanceTransitionId");

                    b.ToTable("InstanceEvent");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FieldUpdates")
                        .HasColumnType("text");

                    b.Property<string>("FormData")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromStateName");

                    b.HasIndex("InstanceId");

                    b.HasIndex("ToStateName");

                    b.ToTable("InstanceTransition");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEntryFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitFlowName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("OnEntryFlowName");

                    b.HasIndex("OnExitFlowName");

                    b.HasIndex("WorkflowName");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-start",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5890),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5890),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-card-password-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5950),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5950),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-security-question-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6010),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6010),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-set",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6070),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6070),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-fail",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6130),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6130),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-start",
                            BaseStatus = 2,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6470),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6470),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-active",
                            BaseStatus = 4,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6530),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6530),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-suspended",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6590),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6590),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-deactivated",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6640),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6640),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("FlowMessage")
                        .HasColumnType("text");

                    b.Property<string>("FlowName")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("FlowName");

                    b.HasIndex("FromStateName");

                    b.HasIndex("ToStateName");

                    b.ToTable("Transitions");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-validate-with-card",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6190),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6190),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-validate-with-security-question",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6250),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6250),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-acp",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-card-password-valid",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6300),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-asq",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6360),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-security-question-valid",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6360),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6700),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FlowName = "user-register",
                            FromStateName = "user-start",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6700),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        },
                        new
                        {
                            Name = "user-suspend",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6760),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6760),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-suspended"
                        },
                        new
                        {
                            Name = "user-deactive",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6820),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6820),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-deactivated"
                        },
                        new
                        {
                            Name = "user-activate-fs",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6870),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-suspended",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6870),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        },
                        new
                        {
                            Name = "user-activate-fd",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6930),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-deactivated",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6930),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        });
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName_Description")
                        .HasColumnType("text");

                    b.Property<string>("StateName_Title")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Form")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Title")
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName_Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName_Description");

                    b.HasIndex("StateName_Title");

                    b.HasIndex("TransitionName_Form");

                    b.HasIndex("TransitionName_Title");

                    b.HasIndex("WorkflowName_Title");

                    b.ToTable("Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("98371222-3d2d-4a6d-8218-5a8398375d07"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5870),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici sifre yenileme",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5870),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("a2057a45-ad00-4c13-9bda-77fd8eea643f"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5880),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User Password Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5880),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("6fd0fe76-d23c-43f8-8645-17b1427a55a3"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5900),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5900),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("3cf43f10-7590-49a9-8b83-b6120cbfc3a9"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5920),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5920),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("00519d6c-669a-4f57-ac3d-12a16c457cc0"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5930),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5930),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("3cdaff96-4dc0-4cba-b467-5b4a6198b465"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5950),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5950),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("60482695-6998-4f51-927a-af1c1da0d75e"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5970),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5970),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("a6ccd65c-9040-461a-8895-bcc4e347a0bd"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5980),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5980),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("ef15dfc2-558e-456b-80c5-cf136694c00f"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5990),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5990),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("63379467-598e-4696-833d-8dcdd9b852b3"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6000),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card password valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6000),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("c03cfd86-6a04-434a-8382-9594216f7fa9"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6020),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6020),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("67d49121-afb1-424b-b0aa-68da1a8ce7b8"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6040),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security Question Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6040),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("9939efcc-aa26-4a62-a499-04a1834c41df"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6050),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6050),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("e4301494-7fb6-4057-bc24-e7499585567c"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6070),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security question valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6070),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("90425b52-6c4f-4a91-b399-60f48f26f7cf"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6090),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Degisti",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6090),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("7bc75bfe-14f4-4059-9b30-e3adcf7e4c5a"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6100),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password Was Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6100),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("f89618a3-1fc0-4a1f-bef3-26fc2e67f8f4"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6110),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellendi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6110),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("30814db7-e7ee-4ab0-be17-e076069408d1"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6120),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6120),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("f616ea50-4986-4a51-a9fa-e64d3128a666"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6140),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart veya Guvenlik Sorusu Dogrulanamadi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6150),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("f1174b21-3410-4ed3-a7b1-4b0338323985"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6160),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Or Security Question Not Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6160),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("cf571b01-82b1-477c-b931-c8bad020c549"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6170),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellenemedi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6170),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("f53b9310-e916-400d-8e31-89c0d00f6ec4"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6180),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was NOT reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6180),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("2b801884-d55a-4883-a2a6-9f75e7505e0f"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6200),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6200),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("2852c25d-26dc-4a07-9305-47a111996906"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6220),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Card Pin",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6220),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("75654029-a98d-4893-8297-ffb9ae90a523"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6230),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6230),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("1fe92b30-e9f4-4d99-b663-2af12879c7d5"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6240),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6240),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("e8d5717b-5ec4-422b-bad8-c9e5eb086468"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("dfc63721-c6a0-43f1-9a0f-488cb74b9413"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6270),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Security Question",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6270),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("ca67a8fe-0bcc-4f0f-8194-dfbd2477f898"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6290),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6290),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("2e75bc69-97e7-490c-b45d-10bbd3e51aa4"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6300),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("532371ff-0ce1-4d39-9001-62d296a0a708"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6320),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6320),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("c40146d3-165e-4315-82e7-c62043425bd9"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6330),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6330),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("81b1688d-32e5-40a6-b37a-0cceb12d2bc8"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6340),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6340),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("435677b7-b55c-47d5-8fc4-cc7d0c5b4552"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6350),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6350),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("e0ecab62-b002-4f28-837c-6d67a7583e79"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6370),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6370),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("3a485863-1308-4158-9bd0-ff64411cb4bd"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6380),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6380),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("f289dcf7-4228-4356-9c6d-ae7c83f1eb05"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6400),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6400),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("0f296b0d-951e-4293-bef9-3bdb66bb6c4c"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6410),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6410),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("9b21cce0-a6c4-464c-963e-76247135f7f6"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6440),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Statu Akisi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6440),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("4d98dd25-3abd-4470-8aad-3445f4fb512c"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6450),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User State Process",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6450),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("a62db010-52e2-4670-bbd8-51118759ba95"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6490),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6490),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("059ad202-72c8-430a-8bb6-f011c79fdfa7"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6500),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6500),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("b33232c3-b771-454c-acea-346505afc0d0"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6510),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6510),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("871dec99-41a7-480d-a93b-3b9eb37f2d13"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6520),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6520),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("8782e522-a68d-4fe0-a401-cd1461af2693"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6540),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6540),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("1339ec0a-9601-48ba-a75a-f668e4d864da"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6560),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6560),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("bd3eb55c-2ee0-41a4-abb6-4c5d4c23faea"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6570),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6570),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("0e00999e-553c-433c-94a5-64ce4ffefbe4"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6580),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6580),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("9e5d20c4-587e-4c4a-93c6-ef7391bb7d5a"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6600),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6600),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("a8be37c3-b344-429d-a787-1b3535c360c5"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6610),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6610),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("d9be15c1-66e9-4be7-81a6-8f33af12252e"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6620),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6630),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("c8c417eb-bbac-4e01-91d4-e0ec68085fda"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6640),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6640),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("095c3e75-0bfa-4875-967d-238a761edf42"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6660),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktif",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6660),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("506f90e5-b645-42fe-be2f-3942c23a759a"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6670),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6670),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("fd584825-16ce-4c94-8cd5-0ec2b18cbd18"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6680),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktive edilmis",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6680),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("458ba6aa-82cd-4d77-bf5a-bef06c11a272"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6690),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Record has been deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6690),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("a063ccf8-06ad-4993-bec8-358e0007706d"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6720),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Kaydi Tamamla",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6720),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("3616dd59-afa8-4d2f-8742-f4ee299fb443"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6730),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Register User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6730),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("8fdae5e9-8fe1-479c-b2a0-2bf1e5c31f2d"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6740),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6740),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("ea11c734-3380-443b-9d15-34e9cc9e90dc"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6750),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6750),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("f3bc4fd4-baf5-4cc1-ae9e-6255a119ae65"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6770),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Gecici Kitle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6770),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("b78054d6-fe79-42b5-8dc7-078452d5019a"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6780),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Suspend User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6780),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("166dc3cd-81e5-406e-8a52-53948eca4243"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6800),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6800),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("ac7da1a7-392c-495f-8418-d0391db37b33"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6810),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6810),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("ab64a6c1-ce5d-40c2-aa69-f96f73e33f4a"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6830),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6830),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("60b36021-8611-44e9-8c83-72bbc28974a0"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6840),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6840),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("8ecc7616-ab8f-4db1-96e6-9de5b683783b"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6850),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6850),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("0b4aa3eb-03bd-4996-8703-66c9dfaba38d"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6870),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6870),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("48658728-8645-4551-a2c5-4eaf97400cab"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6890),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6890),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("af3a3b8b-f196-4b57-9e24-2aafb249691d"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6900),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6900),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("423c8a69-f182-4632-b112-6922dfe1931b"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6910),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6910),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("50f9f332-90f9-4618-b249-7164317e36ad"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6920),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6920),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("6e48cd17-f7e2-4756-b259-dee1c278aa22"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6940),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Aktif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6940),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("39aae081-7393-4883-bd33-c492afffd8d7"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6950),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Activate User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6950),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("76788759-7e3c-4a84-940c-2ccbfa6a96b9"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6970),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6970),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("4a727164-76fd-4850-93ae-0d5b0b1a97b3"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6980),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6980),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        });
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.Property<Guid?>("WorkflowEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("WorkflowEntityId");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("Workflows");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5770),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5780),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user", "security" }
                        },
                        new
                        {
                            Name = "user",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6430),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6430),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AllowOnlyOneActiveInstance")
                        .HasColumnType("boolean");

                    b.Property<int>("AvailableInStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsStateManager")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowName");

                    b.ToTable("WorkflowEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("04fd105f-91cc-49f9-8f25-63f6aaa232ae"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5850),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = false,
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(5850),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("21ebdc97-cce6-4bb9-b6ef-77fb6d772b87"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6470),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = true,
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6470),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("ZeebeFlow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.HasKey("Name");

                    b.ToTable("ZeebeFlow");

                    b.HasData(
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6420),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Gateway = "zeebe-local",
                            Message = "simple-flow-starter",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 40, 34, 618, DateTimeKind.Utc).AddTicks(6420),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Process = "Process_Simple",
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("Instance", b =>
                {
                    b.HasOne("State", "State")
                        .WithMany()
                        .HasForeignKey("StateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workflow", "Workflow")
                        .WithMany()
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("State");

                    b.Navigation("Workflow");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.HasOne("InstanceTransition", "InstanceTransition")
                        .WithMany()
                        .HasForeignKey("InstanceTransitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstanceTransition");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.HasOne("State", "FromState")
                        .WithMany()
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromState");

                    b.Navigation("Instance");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.HasOne("ZeebeFlow", "OnEntryFlow")
                        .WithMany()
                        .HasForeignKey("OnEntryFlowName");

                    b.HasOne("ZeebeFlow", "OnExitFlow")
                        .WithMany()
                        .HasForeignKey("OnExitFlowName");

                    b.HasOne("Workflow", "Workflow")
                        .WithMany("States")
                        .HasForeignKey("WorkflowName");

                    b.Navigation("OnEntryFlow");

                    b.Navigation("OnExitFlow");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.HasOne("ZeebeFlow", "Flow")
                        .WithMany()
                        .HasForeignKey("FlowName");

                    b.HasOne("State", "FromState")
                        .WithMany("Transitions")
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName");

                    b.Navigation("Flow");

                    b.Navigation("FromState");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.HasOne("State", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("StateName_Description");

                    b.HasOne("State", null)
                        .WithMany("Titles")
                        .HasForeignKey("StateName_Title");

                    b.HasOne("Transition", null)
                        .WithMany("Forms")
                        .HasForeignKey("TransitionName_Form");

                    b.HasOne("Transition", null)
                        .WithMany("Titles")
                        .HasForeignKey("TransitionName_Title");

                    b.HasOne("Workflow", null)
                        .WithMany("Titles")
                        .HasForeignKey("WorkflowName_Title");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.HasOne("WorkflowEntity", null)
                        .WithMany("InclusiveWorkflows")
                        .HasForeignKey("WorkflowEntityId");

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.HasOne("Workflow", "Workflow")
                        .WithMany("Entities")
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Navigation("Descriptions");

                    b.Navigation("Titles");

                    b.Navigation("Transitions");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Navigation("Forms");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Navigation("Entities");

                    b.Navigation("States");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Navigation("InclusiveWorkflows");
                });
#pragma warning restore 612, 618
        }
    }
}
