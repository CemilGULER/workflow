// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using amorphie.tag.data;

#nullable disable

namespace amorphie.workflow.data.Migrations
{
    [DbContext(typeof(WorkflowDBContext))]
    [Migration("20230215105540_init3")]
    partial class init3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Instance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.HasIndex("StateName");

                    b.HasIndex("WorkflowName");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceTransitionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OutputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstanceTransitionId");

                    b.ToTable("InstanceEvent");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEnterZeebeFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitZeebeFlowName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ToStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromStateName");

                    b.HasIndex("InstanceId");

                    b.HasIndex("OnEnterZeebeFlowName");

                    b.HasIndex("OnExitZeebeFlowName");

                    b.HasIndex("ToStateName");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("InstanceTransition");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEntryFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitFlowName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("OnEntryFlowName");

                    b.HasIndex("OnExitFlowName");

                    b.HasIndex("WorkflowName");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-start",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9820),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9820),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-card-password-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9890),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9890),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-security-question-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9950),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9950),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-set",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-fail",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(80),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(80),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-start",
                            BaseStatus = 2,
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(430),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(430),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-active",
                            BaseStatus = 4,
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(480),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(480),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-suspended",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(540),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(540),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-deactivated",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(600),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(600),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("FlowName")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.HasIndex("FlowName");

                    b.HasIndex("FromStateName");

                    b.HasIndex("ToStateName");

                    b.ToTable("Transition");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-validate-with-card",
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(140),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(140),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-validate-with-security-question",
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(210),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(210),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-acp",
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-card-password-valid",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(270),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-asq",
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(320),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-security-question-valid",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(320),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(670),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-start",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(670),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-suspend",
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(730),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(730),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-suspended",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-deactive",
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(790),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(790),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-deactivated",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-activate-fs",
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(850),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-suspended",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(850),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-activate-fd",
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(910),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-deactivated",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(910),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        });
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName_Description")
                        .HasColumnType("text");

                    b.Property<string>("StateName_Title")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Form")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Title")
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName_Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName_Description");

                    b.HasIndex("StateName_Title");

                    b.HasIndex("TransitionName_Form");

                    b.HasIndex("TransitionName_Title");

                    b.HasIndex("WorkflowName_Title");

                    b.ToTable("Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c9a0028-77bb-4898-a51d-8cdb290ca6cf"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9790),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici sifre yenileme",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9790),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("8b95989f-c6dd-4b80-b56e-17d4b0b652bf"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9810),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User Password Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9810),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("01f2281a-05a2-4c94-b948-8f6d3019ba49"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9830),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9830),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("59cc9ce4-968a-4dd0-be7a-643dd5196c91"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9850),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9850),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("ae155fcd-f579-4f6e-bf50-161d6a0657ce"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9860),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9860),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("ac03b584-4ef5-43c9-8d4c-6dfca1ff5c3f"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9880),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9880),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("70099476-3376-48d0-b939-cbf31b7752cc"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9900),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9900),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("94f034fe-6142-46d6-aa27-ad95aec2fa18"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9910),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9910),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("07592c24-104e-43a8-9bcf-eb592dbec743"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9930),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9930),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("a8da1080-93ce-417a-8fbe-c47836636b64"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9940),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card password valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9940),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("192d57f8-e86d-42d0-b49a-f0cd07585e33"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9960),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9960),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("cc6f2966-5354-44fa-9530-c0a1c0519cd0"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9970),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security Question Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9970),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("1dbc5230-f6e7-4886-acb3-22340c093135"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9980),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9980),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("72a89566-3628-4b15-ab57-533c1bed8c6c"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security question valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("aee13dc2-5559-4395-8168-83aa4087f9e8"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(20),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Degisti",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(20),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("00da1624-6ebd-45f6-bfb9-7ee2a95e2e4d"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(30),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password Was Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(30),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("d1545fec-fe86-4f4d-94b0-b382a88578f7"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(40),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellendi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(40),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("42f453dc-ba56-4a4b-9db6-c2de11f2e18e"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(60),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(60),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("5e79c8e5-1eb7-417b-acc8-eea06e3b9749"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(100),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart veya Guvenlik Sorusu Dogrulanamadi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(100),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("f6607c76-c55c-4446-b9a5-60094db03244"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(110),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Or Security Question Not Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(110),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("77fd244f-4e9a-4c0e-8608-1cbca8ab9006"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(120),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellenemedi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(120),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("79fd1377-7509-4c96-8eae-56344d8900b5"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(140),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was NOT reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(140),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("2fac3444-93b6-445e-877f-ef006034a669"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(160),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(160),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("dcae163a-6656-4b18-bb58-3fd88e22f1f7"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(170),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Card Pin",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(170),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("d81d2176-0019-4405-9e3a-5bfa9d519edf"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(190),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(190),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("27952d8a-a55d-46af-af0a-1b5db42efd5c"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(200),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(200),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("4731f282-4535-4486-9f63-2947f76d2072"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(220),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(220),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("c16af16f-cde9-4004-8dcc-6389f58107cc"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(230),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Security Question",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(230),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("c9cc71f9-c7ac-4486-9334-a01b05a3595e"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(250),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(250),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("36ac4e3d-df8d-493b-a97d-4f12582a2224"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("c73994dc-67ec-4741-8e91-f20ba81bf0db"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(280),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(280),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("fc42d498-023f-4e0d-a45b-78ff219b469d"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(290),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(290),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("a11ec603-710e-4e5c-9ee5-dc6292f59aeb"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(300),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("2eaf299b-07be-4df3-9c14-1c7beab5a1f5"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(310),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(320),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("408c9ec7-6fda-4e5d-b422-4473322b253c"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(330),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(330),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("1255650d-1b07-41e3-89fa-3ccfe1d89e4c"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(350),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(350),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("ebdd87a0-a71a-450c-9c96-e4cce369cbbd"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(360),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(360),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("6c1a665d-d8d4-4d66-8b88-74fc5bfefe78"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(370),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(370),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("dd3a2d91-a9b2-4c30-b037-8a1db8a2dbdf"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(390),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Statu Akisi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(390),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("8efa4268-baef-480f-8acf-30962a46286f"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(410),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User State Process",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(410),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("ff19ae70-d1d5-45da-ae0a-158d29bc64ce"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(440),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(440),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("0419bf51-ce16-4f99-9b82-609ca68851db"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(450),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(450),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("8edf1615-0b21-43cd-82b8-c286632c2823"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(460),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(470),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("a74ff671-c2cb-4f14-a469-33df398c9e63"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(480),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(480),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("674e5ade-0908-4e87-84d3-9b933d9f4c1a"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(500),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(500),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("6271ccc2-8d8d-4ded-8f12-3687d862bf2c"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(510),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(510),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("22f44dbe-5b29-40a0-a354-d81a41120bba"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(520),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(520),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("419ef968-7400-452e-b238-6674328aed6c"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(530),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(530),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("e8d86b9e-9098-468e-bcc3-7afdc1edcce5"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(550),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(550),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("7ba5cd1f-1f79-4d50-83ba-f348895ded7b"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(560),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(560),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("2d5be8b0-be9a-4916-9dcf-6ac6c46ee4e1"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(580),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(580),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("02f6d2b6-d0b2-4d19-a3d3-853df072bf93"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(590),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(590),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("84756bac-480d-4bc2-8623-fe8f958cc6ab"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(610),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktif",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(610),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("1378ffc0-b088-40b7-8516-5aed02de90c4"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(620),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(620),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("1b9f3c99-d732-4862-9dfb-6b869bd56bc6"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(650),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktive edilmis",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(650),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("6a73cc2f-7001-4027-8ecf-03d58770a7a4"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(670),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Record has been deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(670),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("f127f8b3-2e88-404f-abd3-7d4aaa17b34b"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(690),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Kaydi Tamamla",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(690),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("50bf3ed3-c131-4cc7-aa52-533cb64bb29e"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(700),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Register User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(700),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("67d3fb02-dd27-4748-930d-2f88ea9408e6"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(710),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(710),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("ac349f7d-18e6-457f-ba8f-ad244cf4524b"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(730),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(730),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("9a4aea9c-4242-4fae-b702-faa721286b39"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(750),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Gecici Kitle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(750),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("83e3776f-fc1b-4736-8bc2-fa60433b3997"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(760),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Suspend User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(760),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("1dc9b26e-2a73-4c25-a39a-4dfe7dd40226"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(770),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(770),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("7eb89482-17d1-4302-abd9-e615ebe2bf75"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(780),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(780),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("2c2e49eb-01ac-4052-9ea8-f65e2617f808"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(800),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(800),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("b996f8b8-efdd-4ee4-8187-104f8f45af7e"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(820),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(820),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("89255041-3950-4514-9077-b543670dc93b"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(830),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(830),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("9d1b356a-7837-4048-a3a5-87153aae3534"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(840),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(840),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("6f68a4e0-bb77-4494-813d-1915f42a5756"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(860),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(860),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("43150a10-51ef-44b0-98d6-fe73e6c744ad"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(880),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(880),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("cfe3c8b9-5bb7-4a13-834a-00f8d3afe24c"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(890),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(890),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("1b11caf2-9294-4f39-be8a-32f83b6b15a5"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(900),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(900),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("c512d92e-75fc-4781-9a99-f7f8f4aeaf81"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(920),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Aktif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(920),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("75a65ecb-677e-4245-a7cb-a000f77b10ee"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(930),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Activate User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(930),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("ce0c8254-1abd-4a5e-acae-9cd51e9e4816"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(950),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(950),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("65d1ebb6-088b-43a2-9a0a-f80a58fe7b1a"),
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(960),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(960),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        });
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.Property<Guid?>("WorkflowEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("WorkflowEntityId");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("Workflows");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9700),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9700),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user", "security" },
                            ZeebeFlowName = "zb-user-reset-password"
                        },
                        new
                        {
                            Name = "user",
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(380),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(380),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AllowOnlyOneActiveInstance")
                        .HasColumnType("boolean");

                    b.Property<int>("AvailableInStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsStateManager")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowName");

                    b.ToTable("WorkflowEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1814d8b6-d27e-47c9-aaae-8a5ac054080c"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9770),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = false,
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9770),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("7fbf4c86-7838-4ebd-9af1-1fc5d811eb9a"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(420),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = true,
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 914, DateTimeKind.Utc).AddTicks(420),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("ZeebeFlow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAtomic")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.HasKey("Name");

                    b.ToTable("ZeebeFlow");

                    b.HasData(
                        new
                        {
                            Name = "zb-user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9680),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Gateway = "https://127.0.0.1",
                            IsAtomic = false,
                            ModifiedAt = new DateTime(2023, 2, 15, 10, 55, 39, 913, DateTimeKind.Utc).AddTicks(9680),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Process = "<bpmn:process></bpmn:process>",
                            Tags = new[] { "idm", "user", "security" }
                        });
                });

            modelBuilder.Entity("Instance", b =>
                {
                    b.HasOne("WorkflowEntity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "State")
                        .WithMany()
                        .HasForeignKey("StateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workflow", "Workflow")
                        .WithMany()
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("State");

                    b.Navigation("Workflow");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.HasOne("InstanceTransition", "InstanceTransition")
                        .WithMany()
                        .HasForeignKey("InstanceTransitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstanceTransition");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.HasOne("State", "FromState")
                        .WithMany()
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "OnEnterZeebeFlow")
                        .WithMany()
                        .HasForeignKey("OnEnterZeebeFlowName");

                    b.HasOne("ZeebeFlow", "OnExitZeebeFlow")
                        .WithMany()
                        .HasForeignKey("OnExitZeebeFlowName");

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("FromState");

                    b.Navigation("Instance");

                    b.Navigation("OnEnterZeebeFlow");

                    b.Navigation("OnExitZeebeFlow");

                    b.Navigation("ToState");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.HasOne("ZeebeFlow", "OnEntryFlow")
                        .WithMany()
                        .HasForeignKey("OnEntryFlowName");

                    b.HasOne("ZeebeFlow", "OnExitFlow")
                        .WithMany()
                        .HasForeignKey("OnExitFlowName");

                    b.HasOne("Workflow", "Workflow")
                        .WithMany("States")
                        .HasForeignKey("WorkflowName");

                    b.Navigation("OnEntryFlow");

                    b.Navigation("OnExitFlow");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.HasOne("ZeebeFlow", "Flow")
                        .WithMany()
                        .HasForeignKey("FlowName");

                    b.HasOne("State", "FromState")
                        .WithMany("Transitions")
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName");

                    b.Navigation("Flow");

                    b.Navigation("FromState");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.HasOne("State", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("StateName_Description");

                    b.HasOne("State", null)
                        .WithMany("Titles")
                        .HasForeignKey("StateName_Title");

                    b.HasOne("Transition", null)
                        .WithMany("Forms")
                        .HasForeignKey("TransitionName_Form");

                    b.HasOne("Transition", null)
                        .WithMany("Titles")
                        .HasForeignKey("TransitionName_Title");

                    b.HasOne("Workflow", null)
                        .WithMany("Titles")
                        .HasForeignKey("WorkflowName_Title");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.HasOne("WorkflowEntity", null)
                        .WithMany("InclusiveWorkflows")
                        .HasForeignKey("WorkflowEntityId");

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.HasOne("Workflow", "Workflow")
                        .WithMany("Entities")
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Navigation("Descriptions");

                    b.Navigation("Titles");

                    b.Navigation("Transitions");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Navigation("Forms");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Navigation("Entities");

                    b.Navigation("States");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Navigation("InclusiveWorkflows");
                });
#pragma warning restore 612, 618
        }
    }
}
