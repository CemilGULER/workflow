// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using amorphie.tag.data;

#nullable disable

namespace amorphie.workflow.data.Migrations
{
    [DbContext(typeof(WorkflowDBContext))]
    [Migration("20230214143952_init2")]
    partial class init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Instance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.HasIndex("StateName");

                    b.HasIndex("WorkflowName");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceTransitionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OutputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstanceTransitionId");

                    b.ToTable("InstanceEvent");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEnterZeebeFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitZeebeFlowName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ToStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromStateName");

                    b.HasIndex("InstanceId");

                    b.HasIndex("OnEnterZeebeFlowName");

                    b.HasIndex("OnExitZeebeFlowName");

                    b.HasIndex("ToStateName");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("InstanceTransition");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEntryFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitFlowName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("OnEntryFlowName");

                    b.HasIndex("OnExitFlowName");

                    b.HasIndex("WorkflowName");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-start",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6440),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6440),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-card-password-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6510),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6510),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-security-question-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6570),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6570),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-set",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6630),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6630),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-fail",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6700),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6700),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-start",
                            BaseStatus = 2,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7070),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7070),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-active",
                            BaseStatus = 4,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7130),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7130),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-suspended",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7190),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7190),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-deactivated",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7250),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7250),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("FlowName")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.HasIndex("FlowName");

                    b.HasIndex("FromStateName");

                    b.HasIndex("ToStateName");

                    b.ToTable("Transition");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-validate-with-card",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6760),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6760),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-validate-with-security-question",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6820),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6820),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-acp",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6880),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-card-password-valid",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6880),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-asq",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6960),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-security-question-valid",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6960),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7310),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-start",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7310),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-suspend",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7370),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7370),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-suspended",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-deactive",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7430),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7430),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-deactivated",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-activate-fs",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7490),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-suspended",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7490),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-activate-fd",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7570),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-deactivated",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7570),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        });
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName_Description")
                        .HasColumnType("text");

                    b.Property<string>("StateName_Title")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Form")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Title")
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName_Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName_Description");

                    b.HasIndex("StateName_Title");

                    b.HasIndex("TransitionName_Form");

                    b.HasIndex("TransitionName_Title");

                    b.HasIndex("WorkflowName_Title");

                    b.ToTable("Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f34362a5-0c8b-467e-8dac-cd37da1303ad"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6410),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici sifre yenileme",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6410),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("6189cd7f-dfaa-4597-bfb4-7656b96b97a4"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6430),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User Password Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6430),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("7819b80b-da74-4ff0-b7bb-8c76a2e78816"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6450),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6450),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("5fa28a44-f2c5-47f4-a349-5871bfa8ddab"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6470),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6470),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("c03c427d-4021-4f84-a5cc-229a87dec599"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6480),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6480),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("1c63ea3a-2e81-4ec5-a1c3-d9528f5fe64f"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6500),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6500),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("61827160-3429-4ea7-b64f-730787faabef"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6520),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6520),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("65d4350e-7f8c-4268-9fd9-4fb3c4180cb1"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6540),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6540),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("cce36711-2994-4c90-8921-495f4a2c244d"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6550),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6550),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("c1c7f73b-a5dc-4186-b476-d8ee27843e1d"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6560),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card password valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6560),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("3060686e-f485-4cf7-9e83-edbb04b62e87"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6580),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6580),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("b8dd6dec-1e21-4d90-bd8b-3a1c344899d4"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6600),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security Question Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6600),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("cab54928-6efd-4425-b03c-61c3e6f55066"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6610),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6610),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("74d99087-47d9-409a-becb-cb9fe7865d16"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6620),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security question valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6620),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("004a8b52-6486-4941-b5e1-059d91838d05"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6650),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Degisti",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6650),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("c5697c4b-c8a3-4aa1-8b61-01e7ecfd6879"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6660),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password Was Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6660),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("40751f3e-f847-4490-b6a5-171af22dd742"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6670),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellendi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6680),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("983cd737-fdd2-4402-ada1-bb06f2853afa"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6690),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6690),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("e7659e6f-eed7-41d0-be4f-567c38e1f974"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6710),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart veya Guvenlik Sorusu Dogrulanamadi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6710),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("d7b2fad9-582d-4302-984a-2651f10aa3ca"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6720),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Or Security Question Not Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6720),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("997ab0a8-309f-4f6c-8b68-2cd03c5dfa83"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6740),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellenemedi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6740),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("cab616dc-b2e3-4b4f-a4c4-616d3f0997fe"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6750),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was NOT reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6750),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("73720fc8-2d17-435b-b368-af813c3fb34b"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6770),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6770),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("bfb3ac01-0526-432d-bbdc-4f598313e18e"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6790),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Card Pin",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6790),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("ea10842d-c8fe-4df5-b39e-1618fb4e754a"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6800),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6800),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("9284d5dc-5d1d-4166-8f25-afa03b075d11"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6820),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6820),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("9dcd383a-5002-47ad-b0f7-5e2e629be72c"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6840),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6840),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("e7eb4b60-8c69-4c98-8ab4-87386eff07c4"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6850),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Security Question",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6850),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("2af5891b-4177-4958-a5e6-e0e54fcbdeb4"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6860),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6860),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("6893a3db-ef2d-44d2-8677-a6efbd0b6adf"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6880),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6880),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("2636e23b-5cee-4b5c-8128-8bf9308bc2ac"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6900),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6900),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("25fbc374-5636-4951-a501-547507fa74dd"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6910),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6910),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("5e832614-451b-471d-a54e-30c717ad7b69"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6920),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6920),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("b20774dc-32ca-4272-9f0c-a4e718d423cb"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6950),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6950),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("df025bc9-d152-49ec-96d2-5efe3594c3a8"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6970),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6970),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("a2ff4b6c-44b7-4cb9-9a51-535a4fb1aea1"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6990),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6990),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("3450fc57-3fea-4f61-9b71-aa8ff532f9fc"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7000),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7000),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("f908fb65-0cfb-4550-89ac-1957a0feaa95"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7010),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7010),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("b076ac47-19b9-4f28-94db-f380748d641e"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7040),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Statu Akisi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7040),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("b5ba6749-bddc-442d-b119-f1aceda48ac5"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7050),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User State Process",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7050),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("3045122d-36d6-4b8d-a93e-82ade0ec84f7"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7080),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7080),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("b33812fa-c65d-443a-ae6c-a3ab3f340c06"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7100),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7100),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("882268d6-2bfa-4f6e-ab2c-3c4eead544f1"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7110),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7110),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("0789a372-c8c1-40af-9a4a-cec7e0d9ee8e"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7120),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7120),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("00b4dc17-e648-4734-b1ff-9e3add3a9281"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7140),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7140),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("3eaff752-1521-4846-bc66-768b63758f3f"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7160),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7160),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("13f9747c-4bca-4da6-84ba-eba481e89335"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7170),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7170),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("78304c5e-7253-418b-ab44-fa17282e18af"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7180),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7180),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("1929dc34-cd69-4f95-8772-da96ae491942"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7200),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7200),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("1eeefaa7-09c0-4d5d-ab9c-84053e8cea52"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7220),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7220),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("8e78193d-3910-4332-a9b4-719ed632ec91"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7230),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7230),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("36599068-46ad-431b-a901-977cfd6af745"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7240),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7240),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("8d907a74-6e70-421f-bd27-445dc2925204"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktif",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("7a93c3a6-9286-4b97-ac4d-f189a8476f9f"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7280),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7280),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("eaf2cb58-25f6-4ecb-afa0-7971110b0c04"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7290),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktive edilmis",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7290),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("86e0baaf-0747-4f97-8720-f1e6a2738599"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Record has been deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7300),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("c1921407-aa93-4345-85ce-bde2d9772bb6"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7330),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Kaydi Tamamla",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7330),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("a96bbe99-7f78-4b50-a9a7-eae693bf6d9b"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7340),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Register User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7340),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("f9d7d52c-9814-498e-8763-7331b99196ad"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7350),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7350),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("dcc00911-a878-43b3-a5f5-217bb74b4f65"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7370),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7370),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("3efbd8fe-1019-42f5-b490-996950130b68"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7390),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Gecici Kitle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7390),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("365c044c-f599-4ab9-be9b-6187115d1b00"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7400),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Suspend User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7400),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("5abac451-f63b-486c-a573-09fdfe2924d7"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7410),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7410),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("53d5ad9a-a5c9-4aea-a7b3-eb041a272495"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7420),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7420),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("c9813488-eb18-48e8-811f-0daabde6a0b1"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7440),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7450),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("6087750f-56c9-4261-99c2-d4877252a4e9"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7460),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7460),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("9379f2c3-3d70-4183-8957-1bc86e1e1c86"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7470),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7470),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("444160ad-f89f-493d-93f1-f8e906453daf"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7480),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7490),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("452f7668-72ca-4e9e-af3f-793936e5b7de"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7520),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7520),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("b4350b4f-f3f8-494e-97e2-69bce0a70b6f"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7530),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7530),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("4caef475-bf3a-4d48-b696-3071611ad049"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7550),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7550),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("b6e21d7a-11aa-4036-bd73-a98411dbc96a"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7560),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7560),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("37c56e07-e017-4ce2-8d91-5695bb4969de"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7580),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Aktif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7580),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("eb5c4d98-5dd0-433f-9b77-51fd62f71c15"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7590),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Activate User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7590),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("d26fc277-c8b8-4f15-a44a-ef65f00aa32f"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7610),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7610),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("f541fecc-6f6f-499f-9ac2-06471d285ecd"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7620),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7620),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        });
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("Workflows");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6340),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6340),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user", "security" },
                            ZeebeFlowName = "zb-user-reset-password"
                        },
                        new
                        {
                            Name = "user",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7020),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7020),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AvailableInStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsExclusive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStateManager")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowName");

                    b.ToTable("WorkflowEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f2589be3-9078-4933-bd19-83b0941a2790"),
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6390),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsExclusive = false,
                            IsStateManager = false,
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6390),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("c9525b86-f928-48cf-ae1a-08d26020ce58"),
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7060),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsExclusive = false,
                            IsStateManager = true,
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(7060),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("ZeebeFlow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAtomic")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.HasKey("Name");

                    b.ToTable("ZeebeFlow");

                    b.HasData(
                        new
                        {
                            Name = "zb-user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6310),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Gateway = "https://127.0.0.1",
                            IsAtomic = false,
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 39, 52, 187, DateTimeKind.Utc).AddTicks(6310),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Process = "<bpmn:process></bpmn:process>",
                            Tags = new[] { "idm", "user", "security" }
                        });
                });

            modelBuilder.Entity("Instance", b =>
                {
                    b.HasOne("WorkflowEntity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "State")
                        .WithMany()
                        .HasForeignKey("StateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workflow", "Workflow")
                        .WithMany()
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("State");

                    b.Navigation("Workflow");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.HasOne("InstanceTransition", "InstanceTransition")
                        .WithMany()
                        .HasForeignKey("InstanceTransitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstanceTransition");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.HasOne("State", "FromState")
                        .WithMany()
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "OnEnterZeebeFlow")
                        .WithMany()
                        .HasForeignKey("OnEnterZeebeFlowName");

                    b.HasOne("ZeebeFlow", "OnExitZeebeFlow")
                        .WithMany()
                        .HasForeignKey("OnExitZeebeFlowName");

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("FromState");

                    b.Navigation("Instance");

                    b.Navigation("OnEnterZeebeFlow");

                    b.Navigation("OnExitZeebeFlow");

                    b.Navigation("ToState");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.HasOne("ZeebeFlow", "OnEntryFlow")
                        .WithMany()
                        .HasForeignKey("OnEntryFlowName");

                    b.HasOne("ZeebeFlow", "OnExitFlow")
                        .WithMany()
                        .HasForeignKey("OnExitFlowName");

                    b.HasOne("Workflow", "Workflow")
                        .WithMany("States")
                        .HasForeignKey("WorkflowName");

                    b.Navigation("OnEntryFlow");

                    b.Navigation("OnExitFlow");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.HasOne("ZeebeFlow", "Flow")
                        .WithMany()
                        .HasForeignKey("FlowName");

                    b.HasOne("State", "FromState")
                        .WithMany("Transitions")
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName");

                    b.Navigation("Flow");

                    b.Navigation("FromState");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.HasOne("State", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("StateName_Description");

                    b.HasOne("State", null)
                        .WithMany("Titles")
                        .HasForeignKey("StateName_Title");

                    b.HasOne("Transition", null)
                        .WithMany("Forms")
                        .HasForeignKey("TransitionName_Form");

                    b.HasOne("Transition", null)
                        .WithMany("Titles")
                        .HasForeignKey("TransitionName_Title");

                    b.HasOne("Workflow", null)
                        .WithMany("Titles")
                        .HasForeignKey("WorkflowName_Title");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.HasOne("Workflow", "Workflow")
                        .WithMany("Entities")
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Navigation("Descriptions");

                    b.Navigation("Titles");

                    b.Navigation("Transitions");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Navigation("Forms");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Navigation("Entities");

                    b.Navigation("States");

                    b.Navigation("Titles");
                });
#pragma warning restore 612, 618
        }
    }
}
