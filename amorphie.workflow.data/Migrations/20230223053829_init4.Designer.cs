// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace amorphie.workflow.data.Migrations
{
    [DbContext(typeof(WorkflowDBContext))]
    [Migration("20230223053829_init4")]
    partial class init4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Instance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName")
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName");

                    b.HasIndex("WorkflowName");

                    b.HasIndex("ZeebeFlowName");

                    b.HasIndex("EntityName", "RecordId", "StateName");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceTransitionId")
                        .HasColumnType("uuid");

                    b.Property<string>("OutputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstanceTransitionId");

                    b.ToTable("InstanceEvent");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FieldUpdates")
                        .HasColumnType("text");

                    b.Property<string>("FormData")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromStateName");

                    b.HasIndex("InstanceId");

                    b.HasIndex("ToStateName");

                    b.ToTable("InstanceTransition");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEntryFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitFlowName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("OnEntryFlowName");

                    b.HasIndex("OnExitFlowName");

                    b.HasIndex("WorkflowName");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Name = "locked-for-flow",
                            BaseStatus = 256,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3250),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3250),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0
                        },
                        new
                        {
                            Name = "user-reset-password-start",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3380),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3380),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-card-password-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3440),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3440),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-security-question-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3500),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3500),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-set",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3560),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3560),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-fail",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3620),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3620),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-start",
                            BaseStatus = 2,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3970),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3970),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-active",
                            BaseStatus = 4,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4040),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4040),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-suspended",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4090),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4090),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-deactivated",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4150),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4150),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("FlowName")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("FlowName");

                    b.HasIndex("FromStateName");

                    b.HasIndex("ToStateName");

                    b.ToTable("Transitions");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-validate-with-card",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3680),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3680),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-validate-with-security-question",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3740),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3740),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-acp",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3790),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-card-password-valid",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3790),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-asq",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3850),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-security-question-valid",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3850),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4210),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FlowName = "user-register",
                            FromStateName = "user-start",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4210),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        },
                        new
                        {
                            Name = "user-suspend",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-suspended"
                        },
                        new
                        {
                            Name = "user-deactive",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4320),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4320),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-deactivated"
                        },
                        new
                        {
                            Name = "user-activate-fs",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4380),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-suspended",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4380),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        },
                        new
                        {
                            Name = "user-activate-fd",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4430),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-deactivated",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4430),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        });
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName_Description")
                        .HasColumnType("text");

                    b.Property<string>("StateName_Title")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Form")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Title")
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName_Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName_Description");

                    b.HasIndex("StateName_Title");

                    b.HasIndex("TransitionName_Form");

                    b.HasIndex("TransitionName_Title");

                    b.HasIndex("WorkflowName_Title");

                    b.ToTable("Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33c38f3a-4e18-4c69-bbc2-a622fb797bc3"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3350),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici sifre yenileme",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3350),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("f1d1cbe8-f4c0-40a2-8044-4556ad817c30"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3370),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User Password Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3370),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("0a2cbfe3-cfae-4fd7-b109-a0e9f1015c2b"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3390),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3390),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("8aef38bd-f207-4d40-95f1-b7239dd29c10"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3410),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3410),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("e3721809-e672-4b09-b7c2-775fda973c10"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3420),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3420),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("6e8eab12-4b79-44eb-846c-8aeedb6c494b"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3440),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3440),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("019fcc37-6228-4ca1-ad95-76f1f890c5c5"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3460),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3460),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("d76f1cf5-387f-4f44-96db-59769d4f6090"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3470),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3470),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("80705d93-1b02-4815-ab4f-5c8b09bbbd7d"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3480),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3480),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("d629ef11-1bb4-40c4-a35e-202f17b234dc"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3500),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card password valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3500),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("6bb6cdb5-324f-4ece-8bd4-29f16fa531db"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3520),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3520),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("ba1ca7eb-ff89-451d-90f2-803522c77b7f"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3530),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security Question Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3530),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("c427c472-dafe-42d0-897f-11be20828f1b"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3540),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3540),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("a8e45861-d357-426c-ae8f-026809569cda"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3550),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security question valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3550),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("45397836-9aa1-40e5-966e-a7323d14927d"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3570),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Degisti",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3570),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("91dbd13e-38a6-4c22-bf77-9229354fcb6b"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3590),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password Was Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3590),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("2e76b9f5-5eca-4084-820a-8deef7b2589f"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3600),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellendi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3600),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("12a9ce8d-9439-4aaf-9161-c117ccb9bfd9"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3610),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3610),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("340c4b5f-8e32-4768-8002-0421efef360e"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3630),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart veya Guvenlik Sorusu Dogrulanamadi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3630),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("8d76113f-ed58-4cee-b7a9-65fcf3bc12d7"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3650),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Or Security Question Not Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3650),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("73f758b3-3882-44a4-9063-c65900ac0a75"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3660),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellenemedi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3660),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("0db59ab5-9abc-4dd7-80c5-68ca652580da"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3670),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was NOT reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3670),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("233d863c-f632-4233-b587-6a2ee2f00f20"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3690),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3690),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("306ea936-db38-435d-a286-36f59078890e"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3710),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Card Pin",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3710),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("0d8fd0c0-19b6-40fe-b259-2947bf6a7da2"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3720),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3720),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("222eb7e9-5a2d-46e7-afde-a15316a3d7a7"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3730),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3730),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("1189ea15-3238-4e80-b7be-9da85a70c2e4"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3750),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3750),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("58eecb04-ce7d-4b57-bed2-ff4c7437c96c"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3760),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Security Question",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3760),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("31a2033a-4e65-4b7a-8c26-62b88f7d9828"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3780),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3780),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("deb16892-84dc-4807-9963-ed55512b6250"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3790),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3790),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("dc2bc0c0-aff4-4316-9cfc-75c81ff0caef"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3810),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3810),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("1e8bd15b-169f-49db-921d-b56e5d8ecd18"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3820),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3820),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("4f62851c-5db7-485a-8b43-244c266695c5"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3830),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3830),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("400177aa-0111-4be7-9d54-939c1beed228"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3840),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3840),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("b44f8b55-91a3-4c26-86bf-a04a9db490ca"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3860),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3860),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("b00a3f2d-c67a-436b-89d6-91a076367a2f"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3870),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3870),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("050a606d-7859-409a-8106-b937e3d8ea8e"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3890),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3890),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("ca27e8ca-ca10-400d-8605-5d288c214ed7"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3900),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3900),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("bd6e7240-fb00-45ed-9fd6-7042f31b4807"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3940),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Statu Akisi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3940),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("23f31206-b6f9-4eb1-8769-97f26f05725b"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3950),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User State Process",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3950),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("649d1f36-4018-4bfa-8f2f-30cc22038bce"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3980),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3980),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("2917b47b-e5aa-437f-b6ba-f83bd27219dc"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3990),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4000),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("8e9fcb61-acea-46c3-a544-66875a9703af"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4020),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4020),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("eed8908e-261c-49b3-b7db-5dab16285df2"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4030),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4030),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("932888c7-cb41-4210-98f2-8e659c01c079"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4050),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4050),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("77a19f43-2cd7-4e56-b1fc-468b8f4bee6a"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4060),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4060),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("7439e300-68f7-42d2-8dfa-31cb418b79bb"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4070),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4070),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("c4d5092b-1fd2-4e0f-a4ee-da3e7cec80b5"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4090),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4090),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("851ee8c2-643f-4f8d-baf4-88a774449b91"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4110),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4110),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("e7ae2be0-6bf9-4e9c-b3f9-d1639d355dd5"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4120),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4120),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("bc93343c-9d46-4474-81c3-debdf9cbb46e"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4130),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4130),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("4435c666-6731-4cef-a500-3c6b8f04a9b5"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4140),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4140),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("6cafcdbc-d969-48b4-a4f0-92db8def9352"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4160),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktif",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4160),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("644c269b-9481-436c-82ed-788a4460bd1b"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4170),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4170),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("f7e1a8a1-f4b6-498f-bb0d-af00c520398b"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4190),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktive edilmis",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4190),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("a6aae74b-c6f7-447f-9260-bb866c2d3405"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4200),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Record has been deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4200),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("a14141c4-977a-4faa-83c5-0d12d4fff8b6"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4220),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Kaydi Tamamla",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4220),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("5fffb53e-e2c9-4ced-9ca1-3e5383ed24ad"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4230),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Register User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4230),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("c5133ccc-9ec8-41bc-b1f7-ee124d199be7"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4250),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4250),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("469180e8-c211-4a2f-bf99-9c14bba64d96"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("159d8d13-c8d0-4fde-9817-4fdab124c01e"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4280),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Gecici Kitle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4280),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("570bcf8c-7304-450a-9a7c-4908478c05ab"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4290),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Suspend User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4290),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("5540b725-425e-4993-b3f5-511bd2e3446d"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4300),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("e19100be-9672-42cb-a78e-005facf7bfaf"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4320),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4320),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("7337a5c4-2b5c-4d94-9b05-c988685973fd"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4330),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4330),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("d8501088-760f-4977-8e34-f9bf171d0338"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4350),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4350),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("74e1dcb5-d613-4bfd-98d3-734944611298"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4360),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4360),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("3c6a1744-e155-4f55-9076-72b21df19f24"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4370),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4370),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("fe3ed544-1331-49d7-8efe-49ae6e7bc0d9"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4390),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4390),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("5ecfe34e-240f-44c4-a16e-e2c04638bbd3"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4400),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4400),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("71d9dd50-59c8-42df-bcd1-4304cfed755b"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4420),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4420),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("7514e027-25ef-4991-911d-82a66c211ce4"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4430),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4430),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("bb166ec6-2f5d-4d57-abcb-5eed51b96156"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4450),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Aktif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4450),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("1a2454ca-874b-4331-84d1-5bda3f7628fb"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4460),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Activate User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4460),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("899393b8-d1da-4f32-8b27-c05bdb781e57"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4470),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4470),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("4e8ceaf3-35ba-4fdc-b8eb-d80e351f39ec"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4480),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(4480),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        });
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.Property<Guid?>("WorkflowEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("WorkflowEntityId");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("Workflows");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3270),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3270),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user", "security" }
                        },
                        new
                        {
                            Name = "user",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3930),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3930),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AllowOnlyOneActiveInstance")
                        .HasColumnType("boolean");

                    b.Property<int>("AvailableInStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsStateManager")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowName");

                    b.ToTable("WorkflowEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cd4950ca-907a-4d04-9f6f-94efc0b303cc"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3340),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = false,
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3340),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("88247e10-086d-4463-8e61-2c766ebdcc0b"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3960),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = true,
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3960),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("ZeebeMessage", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.HasKey("Name");

                    b.ToTable("ZeebeMessage");

                    b.HasData(
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3910),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Gateway = "zeebe-local",
                            Message = "simple-flow-starter",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 38, 28, 875, DateTimeKind.Utc).AddTicks(3910),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Process = "Process_Simple",
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("Instance", b =>
                {
                    b.HasOne("State", "State")
                        .WithMany()
                        .HasForeignKey("StateName");

                    b.HasOne("Workflow", "Workflow")
                        .WithMany()
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeMessage", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("State");

                    b.Navigation("Workflow");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.HasOne("InstanceTransition", "InstanceTransition")
                        .WithMany()
                        .HasForeignKey("InstanceTransitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstanceTransition");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.HasOne("State", "FromState")
                        .WithMany()
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromState");

                    b.Navigation("Instance");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.HasOne("ZeebeMessage", "OnEntryFlow")
                        .WithMany()
                        .HasForeignKey("OnEntryFlowName");

                    b.HasOne("ZeebeMessage", "OnExitFlow")
                        .WithMany()
                        .HasForeignKey("OnExitFlowName");

                    b.HasOne("Workflow", "Workflow")
                        .WithMany("States")
                        .HasForeignKey("WorkflowName");

                    b.Navigation("OnEntryFlow");

                    b.Navigation("OnExitFlow");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.HasOne("ZeebeMessage", "Flow")
                        .WithMany()
                        .HasForeignKey("FlowName");

                    b.HasOne("State", "FromState")
                        .WithMany("Transitions")
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName");

                    b.Navigation("Flow");

                    b.Navigation("FromState");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.HasOne("State", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("StateName_Description");

                    b.HasOne("State", null)
                        .WithMany("Titles")
                        .HasForeignKey("StateName_Title");

                    b.HasOne("Transition", null)
                        .WithMany("Forms")
                        .HasForeignKey("TransitionName_Form");

                    b.HasOne("Transition", null)
                        .WithMany("Titles")
                        .HasForeignKey("TransitionName_Title");

                    b.HasOne("Workflow", null)
                        .WithMany("Titles")
                        .HasForeignKey("WorkflowName_Title");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.HasOne("WorkflowEntity", null)
                        .WithMany("InclusiveWorkflows")
                        .HasForeignKey("WorkflowEntityId");

                    b.HasOne("ZeebeMessage", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.HasOne("Workflow", "Workflow")
                        .WithMany("Entities")
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Navigation("Descriptions");

                    b.Navigation("Titles");

                    b.Navigation("Transitions");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Navigation("Forms");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Navigation("Entities");

                    b.Navigation("States");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Navigation("InclusiveWorkflows");
                });
#pragma warning restore 612, 618
        }
    }
}
