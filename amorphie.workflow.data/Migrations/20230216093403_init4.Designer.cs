// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using amorphie.tag.data;

#nullable disable

namespace amorphie.workflow.data.Migrations
{
    [DbContext(typeof(WorkflowDBContext))]
    [Migration("20230216093403_init4")]
    partial class init4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Instance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.HasIndex("StateName");

                    b.HasIndex("WorkflowName");

                    b.HasIndex("ZeebeFlowName");

                    b.HasIndex("EntityName", "EntityId", "WorkflowName");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceTransitionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OutputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstanceTransitionId");

                    b.ToTable("InstanceEvent");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEnterZeebeFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitZeebeFlowName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ToStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromStateName");

                    b.HasIndex("InstanceId");

                    b.HasIndex("OnEnterZeebeFlowName");

                    b.HasIndex("OnExitZeebeFlowName");

                    b.HasIndex("ToStateName");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("InstanceTransition");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEntryFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitFlowName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("OnEntryFlowName");

                    b.HasIndex("OnExitFlowName");

                    b.HasIndex("WorkflowName");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-start",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(7990),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(7990),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-card-password-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8060),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8060),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-security-question-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8120),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8120),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-set",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8190),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8190),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-fail",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8250),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8250),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-start",
                            BaseStatus = 2,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8640),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8640),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-active",
                            BaseStatus = 4,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8700),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8700),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-suspended",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8770),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8770),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-deactivated",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9000),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9000),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("FlowName")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.HasIndex("FlowName");

                    b.HasIndex("FromStateName");

                    b.HasIndex("ToStateName");

                    b.ToTable("Transitions");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-validate-with-card",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8330),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8330),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-validate-with-security-question",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8400),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8400),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-acp",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8450),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-card-password-valid",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8450),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-asq",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8520),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-security-question-valid",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8520),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9080),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-start",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9080),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-suspend",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9170),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9170),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-suspended",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-deactive",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9230),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9230),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-deactivated",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-activate-fs",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-suspended",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9300),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-activate-fd",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9360),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-deactivated",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9360),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        });
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName_Description")
                        .HasColumnType("text");

                    b.Property<string>("StateName_Title")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Form")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Title")
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName_Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName_Description");

                    b.HasIndex("StateName_Title");

                    b.HasIndex("TransitionName_Form");

                    b.HasIndex("TransitionName_Title");

                    b.HasIndex("WorkflowName_Title");

                    b.ToTable("Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("380c72ed-446e-4422-89bd-7a61f38abad1"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(7960),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici sifre yenileme",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(7960),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("44a9a284-3c29-4019-880a-9e16546e6b7c"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(7970),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User Password Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(7970),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("529ddc32-4443-4990-a802-d2a6e8349b31"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8000),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8000),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("113a6f3e-d9dd-437a-a47f-d90e3a8d51f7"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8020),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8020),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("16044817-8685-4cde-938a-e081e8b0798d"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8040),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8040),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("5e9f1568-207f-4c03-9e6b-5fa49f018287"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8050),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8050),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("0243b3c7-b88d-43b8-92d1-56387cc53f4e"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8070),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8070),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("0a2776de-c308-40a3-84b8-f69030de16f2"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8090),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8090),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("4374d338-9c47-4835-9488-f164284cda22"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8100),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8100),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("439b8e4e-2185-4a82-910e-58151bd4a09c"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8120),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card password valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8120),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("616b8eb9-0652-46c9-a24e-f8a6353e5013"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8140),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8140),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("d37dc592-06b2-4bfa-ac17-935f3559c03c"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8150),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security Question Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8150),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("b4424d92-ec90-41f0-9c0c-f78ee9a09ddf"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8170),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8170),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("87686e6b-5ab8-4941-8c83-7064bb10e343"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8180),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security question valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8180),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("8b3454f5-d03c-45df-8fca-5642e6a90307"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8200),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Degisti",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8200),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("33a57cec-92c6-4099-8fc0-f7e772fd1a8b"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8210),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password Was Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8210),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("4a1b52fa-3762-4cc0-b9d1-1b064635b180"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8230),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellendi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8230),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("b458c854-2e17-4e80-b68f-a106777254f0"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8240),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8240),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("50af82d9-8f58-4dfb-a557-4da40b579c99"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart veya Guvenlik Sorusu Dogrulanamadi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("29d1975e-1fe1-471e-b4de-4378fac6699f"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8280),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Or Security Question Not Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8280),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("a7eac6d8-07bc-4d72-82f2-400fdc6bd6bc"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8290),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellenemedi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8290),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("b8bf583d-1521-4abb-9eb1-9a5b1bb58726"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was NOT reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8300),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("5a6c19c1-ea8a-4c01-b28d-de11afeb293c"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8350),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8350),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("fc15c999-7141-4e29-a376-e4d28937453d"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8360),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Card Pin",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8360),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("3f6b3212-2eb4-47e8-b9ee-7aa61f0d202e"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8380),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8380),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("2695c82b-4fa2-4b0b-8e76-3a6d7cf2e43d"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8390),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8390),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("2404b520-801e-43de-9e9d-6d2d79f33347"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8410),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8410),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("379227ab-fbc7-41d2-ac33-b3ff6e2f089a"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8420),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Security Question",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8420),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("a5ead946-60bc-4714-b5eb-f293ff893aac"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8430),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8440),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("5644f015-ce83-4970-8916-39925190a313"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8450),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8450),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("a91ce451-38f9-463d-b3a2-9f0bb0c61066"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8470),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8470),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("d9dd5e1c-d880-4089-900e-a2277515a3f6"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8480),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8480),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("7404b7c8-611a-4dcf-9bd1-e1ea13631a21"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8490),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8490),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("22623a2d-b472-4699-8669-3d167c422fbb"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8510),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8510),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("c5391ca1-3884-4ad9-b370-231c1fb5e39a"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8530),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8530),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("c6d41d73-83c8-4def-8811-206c942ccaca"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8540),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8540),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("ddd72eb5-02d9-4ee1-aad2-3b9451e318e2"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8550),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8550),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("cd5653b5-87b3-4001-b3e4-9431fe60951b"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8570),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8570),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("ac879afe-e714-4f3b-b8e0-b31a55a9bdae"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8600),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Statu Akisi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8600),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("6a027357-e684-4a2a-9c7d-7f6e7ad41c61"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8610),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User State Process",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8610),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("269b3bed-38e0-4487-9469-33d56a44063e"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8650),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8650),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("5c271ddc-c284-4c50-832d-cd22e1e16c69"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8670),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8670),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("f6b28ce2-0532-47db-8e8b-aa2b82f0bf23"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8680),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8680),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("ae6b5781-0e53-4558-b306-adfa5348cc16"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8700),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8700),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("45bcf06d-981c-47e9-bd3c-1c5d279e397b"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8720),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8720),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("0eec5aba-71b2-43f8-9a62-daa449320cf1"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8730),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8730),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("5114c94f-587d-47de-a758-5c5874ba440d"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8740),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8740),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("06b04ef2-a637-48c8-aae4-043023090b18"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8760),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8760),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("03d48e68-a10e-4861-872e-ddda5396c4c1"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8780),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8780),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("cd43096c-f9a7-45d8-97d7-35ca2265ad52"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8800),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8800),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("277b0ad9-2d4c-481d-8bef-9199b4906446"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8810),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8810),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("2885b599-9ad3-43af-8957-88cd2d5ff5b7"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8950),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8950),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("551b1bd8-3262-4c1a-b988-b081f33b206b"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9030),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktif",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9030),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("856d82d8-2792-4ef9-82fc-129a505789cd"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9040),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9040),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("ff0da621-5976-4fc3-aef1-e81d62d09cfd"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9050),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktive edilmis",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9050),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("fe57f715-99ce-4abd-ad51-6d1bb0de0433"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9070),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Record has been deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9070),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("d53e62c9-65df-4c16-a481-e2d5083163af"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9090),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Kaydi Tamamla",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9090),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("ab1cb8ce-93a8-4ae5-84fd-2a8832431947"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9110),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Register User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9110),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("1a1b9ad8-989f-493e-a64c-cdaf1c402bd4"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9150),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9150),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("000fd990-6142-4760-be14-86095ec38c79"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9160),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9160),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("05045669-7384-4a28-8215-bb74d2c08899"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9190),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Gecici Kitle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9190),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("3bb9a0f8-81e3-4011-bed9-787ec13bd4d1"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9200),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Suspend User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9200),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("47076e44-e600-4de2-bb0a-959eefdf4001"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9210),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9210),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("f3ace30f-aaa7-4c54-ad2e-6ea9d4ad551c"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9230),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9230),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("a5ace54f-21ff-4a4f-a86f-4543c1dc8ee6"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9250),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9250),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("85698a5f-a962-41e7-8893-3773439691f5"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("286fd08a-edae-4c22-b288-28e13bca09ab"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9280),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9280),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("14013b51-0b6e-4178-bc5a-0ee4568f6745"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9290),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9290),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("3f96a1b8-64d2-4f4f-bc66-8e49bd3978d5"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9310),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9310),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("15f12707-c61e-447d-b77f-53a9d1072432"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9320),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9320),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("601478bb-dba0-46aa-8d45-3164cf9cd110"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9340),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9340),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("bb87ed6b-d6c5-4257-bf75-c2438fbee5c2"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9350),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9350),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("f2afafa3-ac12-460d-8689-0ded62402bd0"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9370),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Aktif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9370),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("cd05d9bf-5ec4-4789-9b6c-bd4ce89a1ae7"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9380),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Activate User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9380),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("7ba08b8e-25b2-42c8-b3c7-ab9741b3ea79"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9400),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9400),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("fe73c3c3-fa75-4b4d-a74f-a9d762f7b04c"),
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9410),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(9410),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        });
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.Property<Guid?>("WorkflowEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("WorkflowEntityId");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("Workflows");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(7890),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(7890),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user", "security" },
                            ZeebeFlowName = "zb-user-reset-password"
                        },
                        new
                        {
                            Name = "user",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8580),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8580),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AllowOnlyOneActiveInstance")
                        .HasColumnType("boolean");

                    b.Property<int>("AvailableInStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsStateManager")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowName");

                    b.ToTable("WorkflowEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b814c8dd-7501-4e01-b0ed-aa9620d0a926"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(7940),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = false,
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(7940),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("818e56a1-47a6-44ce-b303-26a7ee882804"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8630),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = true,
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(8630),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("ZeebeFlow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAtomic")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.HasKey("Name");

                    b.ToTable("ZeebeFlow");

                    b.HasData(
                        new
                        {
                            Name = "zb-user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(7860),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Gateway = "https://127.0.0.1",
                            IsAtomic = false,
                            ModifiedAt = new DateTime(2023, 2, 16, 9, 34, 3, 391, DateTimeKind.Utc).AddTicks(7860),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Process = "<bpmn:process></bpmn:process>",
                            Tags = new[] { "idm", "user", "security" }
                        });
                });

            modelBuilder.Entity("Instance", b =>
                {
                    b.HasOne("WorkflowEntity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "State")
                        .WithMany()
                        .HasForeignKey("StateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workflow", "Workflow")
                        .WithMany()
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("State");

                    b.Navigation("Workflow");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.HasOne("InstanceTransition", "InstanceTransition")
                        .WithMany()
                        .HasForeignKey("InstanceTransitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstanceTransition");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.HasOne("State", "FromState")
                        .WithMany()
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "OnEnterZeebeFlow")
                        .WithMany()
                        .HasForeignKey("OnEnterZeebeFlowName");

                    b.HasOne("ZeebeFlow", "OnExitZeebeFlow")
                        .WithMany()
                        .HasForeignKey("OnExitZeebeFlowName");

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("FromState");

                    b.Navigation("Instance");

                    b.Navigation("OnEnterZeebeFlow");

                    b.Navigation("OnExitZeebeFlow");

                    b.Navigation("ToState");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.HasOne("ZeebeFlow", "OnEntryFlow")
                        .WithMany()
                        .HasForeignKey("OnEntryFlowName");

                    b.HasOne("ZeebeFlow", "OnExitFlow")
                        .WithMany()
                        .HasForeignKey("OnExitFlowName");

                    b.HasOne("Workflow", "Workflow")
                        .WithMany("States")
                        .HasForeignKey("WorkflowName");

                    b.Navigation("OnEntryFlow");

                    b.Navigation("OnExitFlow");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.HasOne("ZeebeFlow", "Flow")
                        .WithMany()
                        .HasForeignKey("FlowName");

                    b.HasOne("State", "FromState")
                        .WithMany("Transitions")
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName");

                    b.Navigation("Flow");

                    b.Navigation("FromState");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.HasOne("State", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("StateName_Description");

                    b.HasOne("State", null)
                        .WithMany("Titles")
                        .HasForeignKey("StateName_Title");

                    b.HasOne("Transition", null)
                        .WithMany("Forms")
                        .HasForeignKey("TransitionName_Form");

                    b.HasOne("Transition", null)
                        .WithMany("Titles")
                        .HasForeignKey("TransitionName_Title");

                    b.HasOne("Workflow", null)
                        .WithMany("Titles")
                        .HasForeignKey("WorkflowName_Title");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.HasOne("WorkflowEntity", null)
                        .WithMany("InclusiveWorkflows")
                        .HasForeignKey("WorkflowEntityId");

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.HasOne("Workflow", "Workflow")
                        .WithMany("Entities")
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Navigation("Descriptions");

                    b.Navigation("Titles");

                    b.Navigation("Transitions");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Navigation("Forms");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Navigation("Entities");

                    b.Navigation("States");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Navigation("InclusiveWorkflows");
                });
#pragma warning restore 612, 618
        }
    }
}
