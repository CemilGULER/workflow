// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace amorphie.workflow.data.Migrations
{
    [DbContext(typeof(WorkflowDBContext))]
    [Migration("20230220164637_init2")]
    partial class init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Instance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName");

                    b.HasIndex("WorkflowName");

                    b.HasIndex("ZeebeFlowName");

                    b.HasIndex("EntityName", "RecordId", "StateName");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceTransitionId")
                        .HasColumnType("uuid");

                    b.Property<string>("OutputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstanceTransitionId");

                    b.ToTable("InstanceEvent");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FieldUpdates")
                        .HasColumnType("text");

                    b.Property<string>("FormData")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromStateName");

                    b.HasIndex("InstanceId");

                    b.HasIndex("ToStateName");

                    b.ToTable("InstanceTransition");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEntryFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitFlowName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("OnEntryFlowName");

                    b.HasIndex("OnExitFlowName");

                    b.HasIndex("WorkflowName");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-start",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(940),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(940),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-card-password-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1010),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1010),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-security-question-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1070),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1070),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-set",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1120),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1120),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-fail",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1180),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1180),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-start",
                            BaseStatus = 2,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1530),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1530),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-active",
                            BaseStatus = 4,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1590),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1590),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-suspended",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1650),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1650),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-deactivated",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1710),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1710),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("FlowName")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("FlowName");

                    b.HasIndex("FromStateName");

                    b.HasIndex("ToStateName");

                    b.ToTable("Transitions");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-validate-with-card",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1240),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1240),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-validate-with-security-question",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1300),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-acp",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1360),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-card-password-valid",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1360),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-asq",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1420),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-security-question-valid",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1420),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1770),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FlowName = "user-register",
                            FromStateName = "user-start",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1770),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        },
                        new
                        {
                            Name = "user-suspend",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1830),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1830),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-suspended"
                        },
                        new
                        {
                            Name = "user-deactive",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1890),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1890),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-deactivated"
                        },
                        new
                        {
                            Name = "user-activate-fs",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1940),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-suspended",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1940),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        },
                        new
                        {
                            Name = "user-activate-fd",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(2000),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-deactivated",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(2000),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        });
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName_Description")
                        .HasColumnType("text");

                    b.Property<string>("StateName_Title")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Form")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Title")
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName_Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName_Description");

                    b.HasIndex("StateName_Title");

                    b.HasIndex("TransitionName_Form");

                    b.HasIndex("TransitionName_Title");

                    b.HasIndex("WorkflowName_Title");

                    b.ToTable("Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("79bc4ec7-3420-4df3-8ec3-9bf9547aa4fa"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(910),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici sifre yenileme",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(910),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("4571aeb2-d733-4385-88af-03a6de9e87eb"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(930),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User Password Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(930),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("f78538ca-4017-4359-85fc-15b6926768ee"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(960),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(960),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("45389f87-3c76-4c5b-8e99-91c636d382da"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(970),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(970),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("1dd26906-dbc4-44be-9e27-bbabb4d48153"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(980),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(980),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("0c12ed51-3521-4130-9318-7f90577f2d57"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1000),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1000),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("0f643991-ab24-4dac-a3b4-0b11df3dff59"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1020),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1020),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("895e2a1c-4f11-4a9a-bf08-b8830fcca7b9"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1030),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1030),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("59d37f10-774e-4c82-a378-9d5fda0eb109"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1040),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1050),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("8d0c2bfd-6f87-4035-8ede-a6b65204c262"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1060),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card password valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1060),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("8e923d25-decf-4f87-ba62-3d927e51581c"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1080),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1080),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("7f9c883d-272f-426c-9f5b-e2913c97bb75"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1090),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security Question Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1090),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("546c9a2e-b899-4aae-8284-b540a7a3f97f"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1100),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1100),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("d96efb42-d182-4adc-9881-b09c8eca5dc6"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1120),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security question valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1120),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("45bd69ff-50c5-4fc1-a6af-a9600fe5cc84"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1140),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Degisti",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1140),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("d20c3e62-f042-42e1-863d-959b866a1f8e"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1150),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password Was Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1150),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("321c7cc1-ceda-4248-b199-07fa79c22250"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1160),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellendi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1160),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("ac7e2ee3-4022-442d-834d-9e1df5cf54e2"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1180),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1180),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("efba5089-9018-4530-afc2-da42082cd67a"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1200),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart veya Guvenlik Sorusu Dogrulanamadi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1200),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("86a68656-5576-42ed-809c-e2b767b8f406"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1210),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Or Security Question Not Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1210),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("f3a4d6ac-1308-4683-a68e-c506409b27e5"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1230),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellenemedi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1230),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("937a0413-65a1-4d73-827b-70fa6d592136"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1240),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was NOT reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1240),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("bed5f8d6-cab5-41a8-8925-34b655bd8654"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("5e05a0a5-f86e-4b86-83c3-cb1cf1f481f4"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1270),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Card Pin",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1270),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("ecdbbb74-a5a3-4362-9d2d-18440e3c5e16"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1280),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1280),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("a20a2d65-5057-4ffc-9329-4100cdb99363"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1300),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("3d64994d-e015-43d3-983c-aebab7823b6f"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1320),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1320),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("a2803055-e820-4161-b3cb-7817120966a9"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1330),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Security Question",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1330),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("8b55fd2e-153f-420c-a4b1-4c2f760aa325"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1340),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1340),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("f37eceb8-2bcc-471e-b522-af9ffd1d0921"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1350),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1350),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("16ebb9f0-f0df-4436-82e1-ff972849f236"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1370),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1370),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("e6d1b862-f489-498f-b437-f822a9b61ff1"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1380),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1380),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("dcd0e525-83d4-465c-966c-7e23bd380d6b"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1400),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1400),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("1f34f14c-59f9-42a1-bb1e-4aa635622972"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1410),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1410),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("d9ca7867-b5b4-45ad-86a1-89a516ad9d2d"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1430),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1430),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("63e57ae2-b408-4927-bd84-8b007fbd94bc"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1440),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1440),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("cac7914a-8a8b-464f-8e3d-e516aa8abc9d"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1450),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1450),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("11bda497-46a9-4bb7-8646-f41a91b0cde6"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1470),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1470),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("8f47e51e-93ab-4251-959c-067c885c385f"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1500),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Statu Akisi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1500),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("c996c77b-1ab4-4b78-a383-05e3e3b9d579"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1510),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User State Process",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1510),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("8fa462a1-157a-4e44-a0c4-6c0eb6ac0060"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1550),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1550),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("7ccd63cb-f410-4107-aa36-39418df86c93"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1560),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1560),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("95b4b500-3763-48cd-9f6c-276b165df94a"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1570),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1570),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("fc7881d2-d9cc-4891-8ce8-e9cebbda8c32"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1580),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1580),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("bafcaae3-d4c5-4365-8ecb-c4f4ea5d16b0"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1610),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1610),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("fa687165-4d51-4df9-9c3c-f8eada69ec15"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1620),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1620),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("a95bf894-cb1f-4d63-84ad-12b47caccb5b"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1630),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1630),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("620e34a6-1c11-4f64-86c2-27e9dbec9a28"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1640),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1640),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("1b180cbf-ab15-4868-a24f-1a093f99948a"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1660),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1670),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("13f7364a-3b40-4a6e-9ff6-ed197da3737e"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1680),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1680),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("413e6dc6-125e-4f28-820e-66f7b3c507e8"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1690),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1690),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("044196a8-c4df-423f-b423-f1088dab16e7"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1700),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1700),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("030ab5b0-00c2-4c33-94ea-1615a799f359"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1730),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktif",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1730),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("452edc7e-c0ef-4a60-a0fa-b20218afa299"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1740),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1740),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("5fc213a7-d20a-4d28-9567-c4d08f7fe9d5"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1750),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktive edilmis",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1750),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("2d668a23-a546-4177-a1cd-2a37bf8b8ade"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1770),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Record has been deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1770),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("38c3485e-1855-44a5-aab1-ac413c6b1980"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1790),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Kaydi Tamamla",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1790),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("a4a52522-4381-4c0c-9512-3275a9844558"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1800),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Register User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1800),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("d0a97b07-597e-4951-abba-225ae4454fbe"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1810),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1810),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("4b1e3ddd-fdea-449a-99fc-88f8c5a78b0b"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1820),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1820),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("37a19aa9-4e75-45ea-92ef-2531e95ae444"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1840),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Gecici Kitle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1840),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("a465c1ee-1723-4b55-b511-f3f4864f41e1"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1850),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Suspend User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1850),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("31d91938-a64e-44ca-a490-c52211042f3f"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1870),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1870),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("df7ca9cf-5c02-489b-8816-e007df70ce56"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1880),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1880),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("861daa17-e172-418b-9273-b36ffa11ef30"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1900),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1900),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("e3aeb86b-a1b8-4b09-9e9c-84b368aaa8da"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1910),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1910),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("f7fa1a92-36d3-4ddf-bcd3-dcc571ce48b1"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1920),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1930),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("8e1fde08-4aab-41fe-830f-80c7da0d463a"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1940),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1940),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("a8584983-cdf5-4bef-9d62-23a526fbab81"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1950),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1950),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("ea1101e5-e1e5-4ee7-aa5c-65492a7849ef"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1970),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1970),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("c5afdcb7-aaf4-492c-b5a8-e3debb7579ca"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1980),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1980),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("d853a12f-3da1-4258-aec9-3494cc98b073"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1990),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1990),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("3f7d5686-8bbc-4780-83c3-8af53e028197"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(2010),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Aktif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(2010),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("d3f2cdf9-454f-44e9-af17-3bfccd405b1d"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(2030),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Activate User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(2030),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("80c97c5a-8ab1-4ef6-aafd-6dd08214bae0"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(2040),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(2040),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("7eba0bc5-d5f7-4406-9daf-a0d6cccf3c72"),
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(2050),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(2050),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        });
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.Property<Guid?>("WorkflowEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("WorkflowEntityId");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("Workflows");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(830),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(830),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user", "security" }
                        },
                        new
                        {
                            Name = "user",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1490),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1490),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AllowOnlyOneActiveInstance")
                        .HasColumnType("boolean");

                    b.Property<int>("AvailableInStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsStateManager")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowName");

                    b.ToTable("WorkflowEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("790cdc22-774d-47e6-98c5-ab016b2a5ac2"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(900),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = false,
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(900),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("e5225a8d-0440-4233-a00d-23f80825308e"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1530),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = true,
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1530),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("ZeebeMessage", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.HasKey("Name");

                    b.ToTable("ZeebeMessage");

                    b.HasData(
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1480),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Gateway = "zeebe-local",
                            Message = "simple-flow-starter",
                            ModifiedAt = new DateTime(2023, 2, 20, 16, 46, 37, 473, DateTimeKind.Utc).AddTicks(1480),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Process = "Process_Simple",
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("Instance", b =>
                {
                    b.HasOne("State", "State")
                        .WithMany()
                        .HasForeignKey("StateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workflow", "Workflow")
                        .WithMany()
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeMessage", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("State");

                    b.Navigation("Workflow");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.HasOne("InstanceTransition", "InstanceTransition")
                        .WithMany()
                        .HasForeignKey("InstanceTransitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstanceTransition");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.HasOne("State", "FromState")
                        .WithMany()
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromState");

                    b.Navigation("Instance");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.HasOne("ZeebeMessage", "OnEntryFlow")
                        .WithMany()
                        .HasForeignKey("OnEntryFlowName");

                    b.HasOne("ZeebeMessage", "OnExitFlow")
                        .WithMany()
                        .HasForeignKey("OnExitFlowName");

                    b.HasOne("Workflow", "Workflow")
                        .WithMany("States")
                        .HasForeignKey("WorkflowName");

                    b.Navigation("OnEntryFlow");

                    b.Navigation("OnExitFlow");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.HasOne("ZeebeMessage", "Flow")
                        .WithMany()
                        .HasForeignKey("FlowName");

                    b.HasOne("State", "FromState")
                        .WithMany("Transitions")
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName");

                    b.Navigation("Flow");

                    b.Navigation("FromState");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.HasOne("State", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("StateName_Description");

                    b.HasOne("State", null)
                        .WithMany("Titles")
                        .HasForeignKey("StateName_Title");

                    b.HasOne("Transition", null)
                        .WithMany("Forms")
                        .HasForeignKey("TransitionName_Form");

                    b.HasOne("Transition", null)
                        .WithMany("Titles")
                        .HasForeignKey("TransitionName_Title");

                    b.HasOne("Workflow", null)
                        .WithMany("Titles")
                        .HasForeignKey("WorkflowName_Title");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.HasOne("WorkflowEntity", null)
                        .WithMany("InclusiveWorkflows")
                        .HasForeignKey("WorkflowEntityId");

                    b.HasOne("ZeebeMessage", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.HasOne("Workflow", "Workflow")
                        .WithMany("Entities")
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Navigation("Descriptions");

                    b.Navigation("Titles");

                    b.Navigation("Transitions");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Navigation("Forms");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Navigation("Entities");

                    b.Navigation("States");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Navigation("InclusiveWorkflows");
                });
#pragma warning restore 612, 618
        }
    }
}
