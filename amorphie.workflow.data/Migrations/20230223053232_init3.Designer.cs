// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace amorphie.workflow.data.Migrations
{
    [DbContext(typeof(WorkflowDBContext))]
    [Migration("20230223053232_init3")]
    partial class init3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Instance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName")
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName");

                    b.HasIndex("WorkflowName");

                    b.HasIndex("ZeebeFlowName");

                    b.HasIndex("EntityName", "RecordId", "StateName");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceTransitionId")
                        .HasColumnType("uuid");

                    b.Property<string>("OutputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstanceTransitionId");

                    b.ToTable("InstanceEvent");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FieldUpdates")
                        .HasColumnType("text");

                    b.Property<string>("FormData")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromStateName");

                    b.HasIndex("InstanceId");

                    b.HasIndex("ToStateName");

                    b.ToTable("InstanceTransition");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEntryFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitFlowName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("OnEntryFlowName");

                    b.HasIndex("OnExitFlowName");

                    b.HasIndex("WorkflowName");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-start",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6850),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6850),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-card-password-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6910),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6910),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-security-question-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6970),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6980),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-set",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7030),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7030),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-fail",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7090),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7090),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-start",
                            BaseStatus = 2,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7430),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7430),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-active",
                            BaseStatus = 4,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7490),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7490),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-suspended",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7540),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7550),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-deactivated",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7600),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7600),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("FlowName")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("FlowName");

                    b.HasIndex("FromStateName");

                    b.HasIndex("ToStateName");

                    b.ToTable("Transitions");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-validate-with-card",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7150),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7150),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-validate-with-security-question",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7210),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7210),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-acp",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-card-password-valid",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-asq",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7320),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-security-question-valid",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7320),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7660),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FlowName = "user-register",
                            FromStateName = "user-start",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7660),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        },
                        new
                        {
                            Name = "user-suspend",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7710),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7710),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-suspended"
                        },
                        new
                        {
                            Name = "user-deactive",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7770),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7770),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-deactivated"
                        },
                        new
                        {
                            Name = "user-activate-fs",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7830),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-suspended",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7830),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        },
                        new
                        {
                            Name = "user-activate-fd",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7880),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-deactivated",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7880),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active"
                        });
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName_Description")
                        .HasColumnType("text");

                    b.Property<string>("StateName_Title")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Form")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Title")
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName_Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName_Description");

                    b.HasIndex("StateName_Title");

                    b.HasIndex("TransitionName_Form");

                    b.HasIndex("TransitionName_Title");

                    b.HasIndex("WorkflowName_Title");

                    b.ToTable("Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6c80b29a-e891-4d60-9d69-5a650e394b58"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6820),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici sifre yenileme",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6820),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("851aa54f-4191-428e-926f-979fc834cf42"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6840),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User Password Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6840),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("1c93c5a7-3169-4a63-ada5-83af87c09f1a"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6860),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6860),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("e5ba67dc-db39-4003-b6ae-fcf797f0bf51"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6880),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6880),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("7f19753f-1942-4c60-8812-ee6ecd36fb2a"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6890),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6890),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("9961497b-89b8-464a-9b7c-3a9b226ac4f3"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6910),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6910),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("d9fe1161-4536-4c6f-8d1c-d54e5c96a09c"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6930),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6930),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("67a9afe3-810e-4559-b916-beaeba9d3770"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6940),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6940),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("7c5d977e-2a00-4aa3-b1b2-1518a269b4fe"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6950),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6950),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("4ff45dba-84ef-4032-914a-f335d44481b6"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6970),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card password valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6970),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("12798b1b-c847-44e1-9b06-f2cfb1cfe320"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6990),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6990),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("cfa45bb8-cc6a-40b3-ab2b-2465c577219b"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7000),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security Question Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7000),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("6db7c1f9-60ca-4068-b877-dda853755b33"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7010),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7010),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("7bd50843-7778-4569-ae75-f63d9ea6bc78"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7020),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security question valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7030),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("ca054d09-3671-49fd-a0d3-7e6de6064804"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7040),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Degisti",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7040),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("6088dde0-244c-4c71-a699-af948b474702"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7060),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password Was Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7060),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("6b243df1-f50c-48ec-ac1e-f73b77b77e85"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7070),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellendi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7070),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("bcf37fe5-338d-46e1-a188-75637314a7c4"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7080),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7080),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("9c16058d-6a3d-437a-8467-f2e3f46bb22d"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7100),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart veya Guvenlik Sorusu Dogrulanamadi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7100),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("324e043b-1a9f-4173-b2e4-083b12c8a235"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7120),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Or Security Question Not Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7120),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("8c3b18cf-61f4-4c28-bde7-ac0ba40a79f7"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7130),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellenemedi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7130),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("e69b9901-e17d-46a6-a0ae-dd25b245c89a"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7140),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was NOT reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7140),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("c89ccb0f-0fe9-40f4-8632-5807dd608ed3"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7160),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7160),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("aa4d75cb-ea4e-4dda-bf34-d422015c9bef"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7170),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Card Pin",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7170),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("3ef2e57f-c3ef-4ce9-8c61-6ec83a841b4d"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7190),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7190),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("b2c0d786-9db0-44c8-bea4-e1a0b3e0203f"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7200),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7200),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("53c88d49-5bba-45cd-abd9-b92a0f8bb02b"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7220),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7220),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("24805bf0-2fdc-4438-930c-61b314d664d3"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7230),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Security Question",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7230),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("19b759c7-7b77-404a-82ac-bbc9667d30fb"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7240),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7240),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("9a8dff4e-c343-4494-a2a0-1d6151085c5a"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("05c0e6b6-a9ad-4829-a1cb-40a239d8a055"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7270),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7270),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("f163444f-f6c1-43c2-b8c9-457e1aba2e8b"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7290),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7290),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("51f608be-5a72-4fc2-8fae-829ae8317d4b"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7300),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("621a5610-c765-44f6-9a0c-78270aaf29b1"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7310),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7310),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("24b5d274-3bf0-4d03-8a89-6c9490338160"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7330),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7330),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("a9d7fcd0-ad28-4a43-a886-d714b47f66ce"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7340),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7340),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("73bf66b4-fde9-42b9-b205-7c08cc5760a1"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7350),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7350),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("66fbff80-5e4d-47aa-aeed-d556a303f6e6"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7370),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7370),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("3c3ba761-0d5a-40dc-a9a2-c7ee11375b14"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7400),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Statu Akisi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7400),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("fa8ac418-a320-4eef-adf0-793e23b5fc1b"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7410),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User State Process",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7410),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("9f1c2e2e-3693-455f-8f7c-6189d23b40c5"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7440),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7440),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("5ee2183e-cc7b-42f0-ada1-f18b2528c027"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7450),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7450),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("ce50268e-d4f2-4c29-a698-ae940ad92c27"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7470),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7470),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("63e9c49b-c299-4b99-94cd-0c00a9c52ed0"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7480),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7480),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("e13b27d9-9755-4196-a421-71b07a6f8b4c"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7500),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7500),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("a6c75e59-9cb5-474b-8389-5397a850ae16"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7510),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7510),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("1dee6696-49fe-45ad-be6e-2015ddadd01d"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7530),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7530),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("fe619e29-771a-4b5a-a16d-601542ae60c2"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7540),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7540),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("f3ee4181-ce73-4ae8-8430-ee1b4803cb4d"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7560),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7560),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("349ce8a4-8723-49c2-bc10-349f5b60b4c4"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7570),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7570),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("c00219d4-0cfa-4eb5-8a9a-c400ac85210e"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7580),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7580),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("8fa7c2fe-ea3e-44c5-b273-307b093405ec"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7590),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7590),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("0129ebe4-0cc5-4fb1-a074-ca5d6d3bf514"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7610),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktif",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7610),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("ca9d2fcc-deed-4f22-9a87-fb8f3f8b9d1a"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7630),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7630),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("f3976279-6932-494c-a732-088547a06399"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7640),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktive edilmis",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7640),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("85b71bdf-d6cf-4ae1-bc6d-6818268fd1a0"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7650),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Record has been deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7650),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("39b29958-5b44-47ee-8062-d1c4673873bc"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7670),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Kaydi Tamamla",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7670),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("7937168f-96a2-4b9b-8089-1d1bc0bd1ef8"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7680),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Register User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7680),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("fdd19328-623b-49e5-b195-f0a9d0f8018b"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7690),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7700),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("f93b44fc-a61f-49e5-bf07-2a0e6195b531"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7710),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7710),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("26b5e69e-6c7f-4c9e-9489-3ecf4303f27e"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7730),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Gecici Kitle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7730),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("f3a58566-e620-4519-ac90-399547352aa4"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7740),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Suspend User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7740),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("7a9b1857-bde7-4ab0-a9bd-57c1739fb157"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7750),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7750),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("d3b3a3ca-6f65-46c6-a706-07009a4c8c05"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7760),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7760),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("cb51ed11-e9db-4b06-ae86-ad04283abc6e"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7780),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7780),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("14c03835-520a-4dba-8425-a1c7ba1a2f24"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7800),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7800),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("4a22b73e-46f9-4ef5-be47-a3ae70a661ea"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7810),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7810),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("b0527705-fd26-4e53-8435-1075da23a8fd"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7820),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7820),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("d6770f23-b5e3-4b5d-820c-81d3381d14b5"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7840),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7840),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("70f707c7-61b9-498a-8773-de3098ab0513"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7850),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7850),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("30cc49f8-b887-4a9c-a8dc-bc12f1c9031d"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7860),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7860),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("0345c1f5-f5e9-4995-91ee-aedda789e5c7"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7880),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7880),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("d977b762-5d2f-451c-95c4-3d4fae7b4605"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7890),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Aktif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7890),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("e6f5fa20-957b-43a6-8080-baecd6849c6b"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7910),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Activate User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7910),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("71bad346-3dce-45f3-bdaf-4e53f0692243"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7920),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7920),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("38630ef4-fc8f-4ae6-bf27-59c7b46e54df"),
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7930),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7930),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        });
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.Property<Guid?>("WorkflowEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("WorkflowEntityId");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("Workflows");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6710),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6740),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user", "security" }
                        },
                        new
                        {
                            Name = "user",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7390),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7390),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AllowOnlyOneActiveInstance")
                        .HasColumnType("boolean");

                    b.Property<int>("AvailableInStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsStateManager")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowName");

                    b.ToTable("WorkflowEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("89746cb5-048e-4448-98b0-48b63c954298"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6800),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = false,
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(6800),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("72df6406-8c6e-4209-887f-51c2d370aec3"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7420),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = true,
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7420),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("ZeebeMessage", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.HasKey("Name");

                    b.ToTable("ZeebeMessage");

                    b.HasData(
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7380),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Gateway = "zeebe-local",
                            Message = "simple-flow-starter",
                            ModifiedAt = new DateTime(2023, 2, 23, 5, 32, 32, 452, DateTimeKind.Utc).AddTicks(7380),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Process = "Process_Simple",
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("Instance", b =>
                {
                    b.HasOne("State", "State")
                        .WithMany()
                        .HasForeignKey("StateName");

                    b.HasOne("Workflow", "Workflow")
                        .WithMany()
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeMessage", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("State");

                    b.Navigation("Workflow");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.HasOne("InstanceTransition", "InstanceTransition")
                        .WithMany()
                        .HasForeignKey("InstanceTransitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstanceTransition");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.HasOne("State", "FromState")
                        .WithMany()
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromState");

                    b.Navigation("Instance");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.HasOne("ZeebeMessage", "OnEntryFlow")
                        .WithMany()
                        .HasForeignKey("OnEntryFlowName");

                    b.HasOne("ZeebeMessage", "OnExitFlow")
                        .WithMany()
                        .HasForeignKey("OnExitFlowName");

                    b.HasOne("Workflow", "Workflow")
                        .WithMany("States")
                        .HasForeignKey("WorkflowName");

                    b.Navigation("OnEntryFlow");

                    b.Navigation("OnExitFlow");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.HasOne("ZeebeMessage", "Flow")
                        .WithMany()
                        .HasForeignKey("FlowName");

                    b.HasOne("State", "FromState")
                        .WithMany("Transitions")
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName");

                    b.Navigation("Flow");

                    b.Navigation("FromState");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.HasOne("State", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("StateName_Description");

                    b.HasOne("State", null)
                        .WithMany("Titles")
                        .HasForeignKey("StateName_Title");

                    b.HasOne("Transition", null)
                        .WithMany("Forms")
                        .HasForeignKey("TransitionName_Form");

                    b.HasOne("Transition", null)
                        .WithMany("Titles")
                        .HasForeignKey("TransitionName_Title");

                    b.HasOne("Workflow", null)
                        .WithMany("Titles")
                        .HasForeignKey("WorkflowName_Title");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.HasOne("WorkflowEntity", null)
                        .WithMany("InclusiveWorkflows")
                        .HasForeignKey("WorkflowEntityId");

                    b.HasOne("ZeebeMessage", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.HasOne("Workflow", "Workflow")
                        .WithMany("Entities")
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Navigation("Descriptions");

                    b.Navigation("Titles");

                    b.Navigation("Transitions");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Navigation("Forms");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Navigation("Entities");

                    b.Navigation("States");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Navigation("InclusiveWorkflows");
                });
#pragma warning restore 612, 618
        }
    }
}
