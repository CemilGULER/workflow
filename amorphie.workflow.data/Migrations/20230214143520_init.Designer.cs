// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using amorphie.tag.data;

#nullable disable

namespace amorphie.workflow.data.Migrations
{
    [DbContext(typeof(WorkflowDBContext))]
    [Migration("20230214143520_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Instance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("WorkflowEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName");

                    b.HasIndex("WorkflowEntityId");

                    b.HasIndex("WorkflowName");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceTransitionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OutputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstanceTransitionId");

                    b.ToTable("InstanceEvent");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEnterZeebeFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitZeebeFlowName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ToStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromStateName");

                    b.HasIndex("InstanceId");

                    b.HasIndex("OnEnterZeebeFlowName");

                    b.HasIndex("OnExitZeebeFlowName");

                    b.HasIndex("ToStateName");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("InstanceTransition");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEntryFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitFlowName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("OnEntryFlowName");

                    b.HasIndex("OnExitFlowName");

                    b.HasIndex("WorkflowName");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-start",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4900),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4900),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-card-password-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4970),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4970),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-security-question-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5090),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5090),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-set",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5150),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5150),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-fail",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5210),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5210),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-start",
                            BaseStatus = 2,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5540),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5540),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-active",
                            BaseStatus = 4,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5600),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5600),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-suspended",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5660),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5660),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-deactivated",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5720),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5720),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("FlowName")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.HasIndex("FlowName");

                    b.HasIndex("FromStateName");

                    b.HasIndex("ToStateName");

                    b.ToTable("Transition");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-validate-with-card",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-validate-with-security-question",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5330),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5330),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-acp",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5390),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-card-password-valid",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5390),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-asq",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5440),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-security-question-valid",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5440),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5770),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-start",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5770),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-suspend",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5830),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5830),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-suspended",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-deactive",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5890),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5890),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-deactivated",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-activate-fs",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5940),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-suspended",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5940),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-activate-fd",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(6000),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-deactivated",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(6000),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        });
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName_Description")
                        .HasColumnType("text");

                    b.Property<string>("StateName_Title")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Form")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Title")
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName_Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName_Description");

                    b.HasIndex("StateName_Title");

                    b.HasIndex("TransitionName_Form");

                    b.HasIndex("TransitionName_Title");

                    b.HasIndex("WorkflowName_Title");

                    b.ToTable("Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c451709-0b1e-4811-b82f-569a80648ffb"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4880),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici sifre yenileme",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4880),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("e73cf177-228b-4498-8d32-107a2a880c40"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4890),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User Password Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4890),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("05fafe6f-042b-431f-ada9-c3de984cb546"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4920),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4920),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("9884f853-bea7-4732-bc40-f45619ae7206"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4930),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4930),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("bae86531-8ea2-429f-9cc3-598e13b50db9"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4940),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4940),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("20fa47e7-eaac-4ec0-b192-a41ffc75aa3d"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4960),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4960),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("f1436177-7158-4f98-975e-89c453126e89"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4980),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4980),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("27504536-3721-4068-a086-aa279f291b91"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4990),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4990),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("9e6d7a79-4f4d-4ceb-b768-6cfb8712d49b"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5000),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5000),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("a3cc2723-40a3-4800-80ed-cdfe68f60d66"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5090),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card password valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5090),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("181f7d3b-1425-4a18-aac9-6bfe3ff7841d"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5110),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5110),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("9b2b0aa1-f034-4d23-ab5c-9817c3d0251d"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5120),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security Question Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5120),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("a0b97b11-46e4-4778-b67f-46b95d552faa"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5130),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5130),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("b8c6bc89-f2b9-40a9-88b3-d6d40923e520"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5140),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security question valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5140),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("7765aef2-c584-4deb-bf7a-84cb679763a0"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5160),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Degisti",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5160),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("5ae9b8d4-2da4-423b-81ce-afc7ee9ef506"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5170),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password Was Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5170),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("60bf2ec6-7d24-428f-9556-2af52a07a32e"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5190),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellendi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5190),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("add1d72d-7677-41bd-9555-67d08d815568"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5200),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5200),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("e9948bfe-1b91-4457-9186-79ce5fa2d10f"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5220),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart veya Guvenlik Sorusu Dogrulanamadi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5220),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("6052a303-ec38-481d-a3f2-e2394169d9c3"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5230),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Or Security Question Not Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5230),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("2d801842-c550-4acc-97f9-ffffe6e0a3b9"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5240),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellenemedi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5240),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("940512a0-cc91-4f20-9e16-cc6498e6f8ab"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was NOT reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("560bb406-2f93-41ec-b2b0-859af905c282"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5280),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5280),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("ced2284a-265d-42b6-b0f2-22cbdc630570"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Card Pin",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5300),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("bdb2889d-bdde-45de-adc6-d22ff7d735ed"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5310),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5310),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("bf6f0cb7-8cbb-4498-a959-2c57c031a78c"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5320),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5320),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("b8433316-1d4a-427d-8147-9ef481f6f07e"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5340),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5340),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("0d256ff8-7d26-4c40-ac18-76cdc893632b"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5350),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Security Question",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5350),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("2e1afc4d-9ff4-49ec-b524-44897787aecf"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5370),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5370),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("17547f9b-a0bf-4469-9b8a-3e8bc8f31030"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5380),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5380),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("8256dbff-b02e-4825-a08b-d12939117da2"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5400),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5400),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("21da608c-bb96-4594-817d-1342a409bc69"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5410),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5410),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("829f0d58-3b45-4f0e-b704-681f8b4dd052"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5420),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5420),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("f6f661a4-3801-4aa4-bca7-28de027b1f9b"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5430),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5430),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("07802706-fb12-44ee-99e3-314523d55197"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5450),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5450),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("e8d6af44-0d6f-451d-94b7-551699937913"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5460),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5460),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("064e1512-59bd-4546-842f-375f23851c8c"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5480),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5480),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("efa6106c-eaae-469e-a7fb-9f542a5d6c89"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5490),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5490),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("265aa140-34b9-4c01-8bff-b8de22c528ba"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5510),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Statu Akisi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5510),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("07cef274-2851-4ecd-8a02-a8c2247e62da"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5520),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User State Process",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5520),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("8fb47da9-6116-48d2-b4ed-17f59abc42e6"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5550),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5550),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("67f4235b-c2e1-44e4-9e9f-b6e57b485016"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5560),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5560),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("e7aad396-4bf5-4271-8236-820f0ac73d09"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5580),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5580),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("45721c42-9d52-45e2-8fd7-55f1f79d6e7c"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5590),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5590),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("0c68f25a-2156-44ab-887c-54a094061d4b"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5620),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5620),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("870dbbb2-803f-4837-bc66-6f4b6378bbf6"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5630),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5630),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("3aad3c9d-f1c5-4f6c-8307-b9557a1191f2"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5650),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5650),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("07869dce-8f18-4d73-81b2-9791ff56594e"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5660),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5660),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("f6120ab2-2822-4bfc-b1ea-4359a34d7c70"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5670),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5680),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("83c74c82-db72-4900-ad44-c7afbc9f06e4"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5690),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5690),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("463cd097-434f-46ae-a712-8efc997b6e32"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5700),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5700),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("b9c286b6-3403-45b3-9899-2e1f575a4511"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5710),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5710),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("b48d4c6d-ea99-4c48-ba03-7ec3e30aeb8b"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5730),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktif",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5730),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("e819a0ab-1566-471e-81a0-23df2dbbc005"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5740),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5740),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("5fa3c008-003b-431c-9322-90924107a420"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5760),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktive edilmis",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5760),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("bc32ce4e-5f68-4b3a-a811-4cf03490f8e8"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5770),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Record has been deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5770),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("dce4ce18-fa93-48ca-acd2-721edcf6d5c2"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5790),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Kaydi Tamamla",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5790),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("a80cef57-de5b-4106-b883-75ff5016b15a"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5800),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Register User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5800),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("e428e7f4-ab74-423a-94e8-319cf4d9924c"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5810),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5810),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("a8363ebd-f84d-4d66-ac4c-161cfbb3019d"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5820),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5820),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("adfdfaeb-79c4-4e3e-8717-6748e198cef0"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5840),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Gecici Kitle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5840),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("25c675a6-a1e9-4c1d-9736-b4bd7090414a"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5850),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Suspend User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5850),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("c6e8cae5-473d-4a0f-be8d-3e9d2cbc5d98"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5870),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5870),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("1d5f458e-1121-4d35-8edf-7c54b5827b36"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5880),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5880),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("1e44d476-c9a6-4340-968e-9352e2ba098e"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5900),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5900),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("965b3b35-e347-4be2-bab9-67e84f33b73c"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5910),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5910),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("2785abc4-5ab7-4f67-8b2b-9efd0efe4152"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5920),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5920),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("f2246b8e-8667-4df2-b58b-762261120d9f"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5940),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5940),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("a2006ed2-e221-4773-9a7f-324993317cd8"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5950),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5950),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("850635a1-7ae9-478c-9954-c9cdefa51d8a"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5970),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5970),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("16d28b8a-9f6f-49e1-b061-a53f4b7afc0c"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5980),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5980),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("7a9d7f14-e270-4b4f-a269-6752edeb20f8"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5990),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5990),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("9af7b946-3999-4ff5-8a4c-72658aa01688"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(6010),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Aktif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(6010),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("b7b3b7e7-de17-42f7-ad9b-3bd58624f956"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(6020),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Activate User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(6020),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("2f6e8514-a4d1-4fa4-adbe-ada70c3b4120"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(6030),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(6030),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("6ec84524-dacb-4d5b-aaaa-4ed2dc7be5e1"),
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(6050),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(6050),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        });
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("Workflows");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4810),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4820),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user", "security" },
                            ZeebeFlowName = "zb-user-reset-password"
                        },
                        new
                        {
                            Name = "user",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5490),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5490),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AvailableInStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsExclusive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStateManager")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowName");

                    b.ToTable("WorkflowEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("db7e41e9-8573-44db-a8a2-515db19256a2"),
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4860),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsExclusive = false,
                            IsStateManager = false,
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4860),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("56288f7d-9b82-462a-b153-76b8b3b164db"),
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5530),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsExclusive = false,
                            IsStateManager = true,
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(5530),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("ZeebeFlow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAtomic")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.HasKey("Name");

                    b.ToTable("ZeebeFlow");

                    b.HasData(
                        new
                        {
                            Name = "zb-user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4790),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Gateway = "https://127.0.0.1",
                            IsAtomic = false,
                            ModifiedAt = new DateTime(2023, 2, 14, 14, 35, 20, 583, DateTimeKind.Utc).AddTicks(4790),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Process = "<bpmn:process></bpmn:process>",
                            Tags = new[] { "idm", "user", "security" }
                        });
                });

            modelBuilder.Entity("Instance", b =>
                {
                    b.HasOne("State", "State")
                        .WithMany()
                        .HasForeignKey("StateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkflowEntity", "WorkflowEntity")
                        .WithMany()
                        .HasForeignKey("WorkflowEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workflow", "Workflow")
                        .WithMany()
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");

                    b.Navigation("Workflow");

                    b.Navigation("WorkflowEntity");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.HasOne("InstanceTransition", "InstanceTransition")
                        .WithMany()
                        .HasForeignKey("InstanceTransitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstanceTransition");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.HasOne("State", "FromState")
                        .WithMany()
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "OnEnterZeebeFlow")
                        .WithMany()
                        .HasForeignKey("OnEnterZeebeFlowName");

                    b.HasOne("ZeebeFlow", "OnExitZeebeFlow")
                        .WithMany()
                        .HasForeignKey("OnExitZeebeFlowName");

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("FromState");

                    b.Navigation("Instance");

                    b.Navigation("OnEnterZeebeFlow");

                    b.Navigation("OnExitZeebeFlow");

                    b.Navigation("ToState");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.HasOne("ZeebeFlow", "OnEntryFlow")
                        .WithMany()
                        .HasForeignKey("OnEntryFlowName");

                    b.HasOne("ZeebeFlow", "OnExitFlow")
                        .WithMany()
                        .HasForeignKey("OnExitFlowName");

                    b.HasOne("Workflow", "Workflow")
                        .WithMany("States")
                        .HasForeignKey("WorkflowName");

                    b.Navigation("OnEntryFlow");

                    b.Navigation("OnExitFlow");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.HasOne("ZeebeFlow", "Flow")
                        .WithMany()
                        .HasForeignKey("FlowName");

                    b.HasOne("State", "FromState")
                        .WithMany("Transitions")
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName");

                    b.Navigation("Flow");

                    b.Navigation("FromState");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.HasOne("State", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("StateName_Description");

                    b.HasOne("State", null)
                        .WithMany("Titles")
                        .HasForeignKey("StateName_Title");

                    b.HasOne("Transition", null)
                        .WithMany("Forms")
                        .HasForeignKey("TransitionName_Form");

                    b.HasOne("Transition", null)
                        .WithMany("Titles")
                        .HasForeignKey("TransitionName_Title");

                    b.HasOne("Workflow", null)
                        .WithMany("Titles")
                        .HasForeignKey("WorkflowName_Title");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.HasOne("Workflow", "Workflow")
                        .WithMany("Entities")
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Navigation("Descriptions");

                    b.Navigation("Titles");

                    b.Navigation("Transitions");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Navigation("Forms");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Navigation("Entities");

                    b.Navigation("States");

                    b.Navigation("Titles");
                });
#pragma warning restore 612, 618
        }
    }
}
