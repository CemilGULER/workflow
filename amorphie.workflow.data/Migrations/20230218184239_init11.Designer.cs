// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using amorphie.tag.data;

#nullable disable

namespace amorphie.workflow.data.Migrations
{
    [DbContext(typeof(WorkflowDBContext))]
    [Migration("20230218184239_init11")]
    partial class init11
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Instance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName");

                    b.HasIndex("WorkflowName");

                    b.HasIndex("ZeebeFlowName");

                    b.HasIndex("EntityName", "RecordId", "StateName");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceTransitionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OutputData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstanceTransitionId");

                    b.ToTable("InstanceEvent");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalData")
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FieldUpdates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormData")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEnterZeebeFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitZeebeFlowName")
                        .HasColumnType("text");

                    b.Property<string>("ToStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromStateName");

                    b.HasIndex("InstanceId");

                    b.HasIndex("OnEnterZeebeFlowName");

                    b.HasIndex("OnExitZeebeFlowName");

                    b.HasIndex("ToStateName");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("InstanceTransition");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("BaseStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OnEntryFlowName")
                        .HasColumnType("text");

                    b.Property<string>("OnExitFlowName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("OnEntryFlowName");

                    b.HasIndex("OnExitFlowName");

                    b.HasIndex("WorkflowName");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-start",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4640),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4640),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-card-password-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4710),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4710),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-security-question-valid",
                            BaseStatus = 8,
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4760),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4760),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-set",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4820),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4820),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-reset-password-fail",
                            BaseStatus = 32,
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4880),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4880),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 200,
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Name = "user-start",
                            BaseStatus = 2,
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5240),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5240),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 100,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-active",
                            BaseStatus = 4,
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5300),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-suspended",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5350),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5350),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        },
                        new
                        {
                            Name = "user-deactivated",
                            BaseStatus = 16,
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5410),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5410),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 0,
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("FlowName")
                        .HasColumnType("text");

                    b.Property<string>("FromStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("ToStateName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.HasIndex("FlowName");

                    b.HasIndex("FromStateName");

                    b.HasIndex("ToStateName");

                    b.ToTable("Transitions");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password-validate-with-card",
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4960),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4960),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-validate-with-security-question",
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5020),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-start",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5020),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-acp",
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5080),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-card-password-valid",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5080),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-reset-password-set-password-asq",
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5130),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-reset-password-security-question-valid",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5130),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Type = 900
                        },
                        new
                        {
                            Name = "user-register",
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5480),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-start",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5480),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-suspend",
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5540),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5540),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-suspended",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-deactive",
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5590),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-active",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5590),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-deactivated",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-activate-fs",
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5650),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-suspended",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5650),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        },
                        new
                        {
                            Name = "user-activate-fd",
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5700),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromStateName = "user-deactivated",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5700),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ToStateName = "user-active",
                            Type = 900
                        });
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("StateName_Description")
                        .HasColumnType("text");

                    b.Property<string>("StateName_Title")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Form")
                        .HasColumnType("text");

                    b.Property<string>("TransitionName_Title")
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName_Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StateName_Description");

                    b.HasIndex("StateName_Title");

                    b.HasIndex("TransitionName_Form");

                    b.HasIndex("TransitionName_Title");

                    b.HasIndex("WorkflowName_Title");

                    b.ToTable("Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d34e2adb-369e-4342-af94-06f529cfe528"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4610),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici sifre yenileme",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4610),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("db8abc48-9c9d-4b7f-9f91-109474acdc7c"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4630),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User Password Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4630),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("febeb5e3-f473-4d9f-bac6-e24fcdf8bffe"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4650),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4650),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("600cdeb3-1e12-4ad9-9e81-3dcc30c17985"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4670),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4670),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("97a1ac6e-a28d-4dd7-88bb-1027d6094a97"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4680),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4680),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("fa3fca91-bd27-44a9-8259-d206a631f1e5"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4700),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4700),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-start"
                        },
                        new
                        {
                            Id = new Guid("674b3660-8715-4999-9851-2b0459e6e047"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4720),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4720),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("6e4a33f8-f208-4513-9753-c45f3cd72609"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4730),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4730),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("52586404-d654-405d-8952-aebde543b71e"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4740),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4740),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("b2bf1dea-c4e1-426f-9ada-d7f5d7376dfb"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4760),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card password valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4760),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-card-password-valid"
                        },
                        new
                        {
                            Id = new Guid("f18865e0-17ab-4516-9570-0b974b859d02"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4780),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Dogru",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4780),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("42143703-d888-492b-aa1b-272fe12aab7e"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4790),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security Question Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4790),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("c33a5ac5-c4ca-492b-a5eb-759b4166f52c"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4800),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu dogru, sifre belirleme bekleniyor",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4800),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("16425c82-1c9d-4d4f-9cb8-fa8647097ddd"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4810),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Security question valid, set password.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4810),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-security-question-valid"
                        },
                        new
                        {
                            Id = new Guid("0257284f-d2ab-466a-8537-73e59a848484"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4830),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Degisti",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4830),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("ea54e5ed-9d80-4169-a314-cf647a18a485"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4850),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password Was Reset",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4850),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("85559a9e-6759-436c-bc0c-22b88e4e83b7"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4860),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellendi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4860),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("a081b0c4-4c5e-4c17-b07e-ceda35e8344a"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4870),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4870),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-set"
                        },
                        new
                        {
                            Id = new Guid("55074397-d3f0-4731-84cf-0cf76d2a10f7"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4910),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart veya Guvenlik Sorusu Dogrulanamadi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4910),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("30201f11-3a92-4ae2-8388-c8239b220444"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4930),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Card Pass Or Security Question Not Valid",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4930),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("8c8f8c6c-442d-48e7-a14d-095ac0406abf"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4940),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre guncellenemedi ve akis tamamlandi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4940),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("bb9f5fc3-5298-4cba-abdf-f09d9e10109c"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4950),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Password was NOT reset and flow completed.",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4950),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-reset-password-fail"
                        },
                        new
                        {
                            Id = new Guid("87ea3c72-cb91-48a6-945a-6f8c9995d20d"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4970),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kart Sifresi Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4970),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("f12c17c6-077a-4bfc-9cee-d48632e71e8b"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4990),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Card Pin",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4990),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("749f6132-26b9-445f-8b0a-0a65c648bd67"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5000),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5000),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("a497def0-3a28-43c6-b615-bb650f70fd19"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5010),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5010),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-card"
                        },
                        new
                        {
                            Id = new Guid("8fab1074-0638-41dd-ad6f-3b114226d618"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5030),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Guvenlik Sorusu Ile Yenile",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5030),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("c7fe69c5-80d6-48eb-8df9-772e53b47a22"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5040),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Reset By Security Question",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5040),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("63ba40d7-26fe-4502-924a-3620ef339b16"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5060),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5060),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("9da00cbd-d219-4343-83f5-a71405760e5c"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5070),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5070),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-validate-with-security-question"
                        },
                        new
                        {
                            Id = new Guid("c7863bef-9f7e-4981-98bc-34a3abd458e6"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5090),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5090),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("c90c510c-3ce9-4748-8866-cf35558bf9d8"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5100),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5100),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("f2c0bd14-1df8-4090-9f59-20b82fafab97"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5110),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5110),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("5b1f3395-69c9-4cb3-b03d-7c7ebb854897"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5130),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5130),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-acp"
                        },
                        new
                        {
                            Id = new Guid("494cc8ef-2d4a-42be-82ad-727bc78ec6f9"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5150),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Sifre Belirle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5150),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("1685663f-fefb-4919-bb74-68dc8076db0a"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5160),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Set New Password",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5160),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("12c193ad-02b9-4435-8a61-39bc4ce317fc"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5170),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5170),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("b2a5578d-3597-493e-b853-cc393ac0347c"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5180),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5190),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-reset-password-set-password-asq"
                        },
                        new
                        {
                            Id = new Guid("0e552a42-fc03-43f5-b0b7-8433f3b8444f"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5210),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Statu Akisi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5210),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("abfe3255-6367-467c-8594-d013f99f3dfa"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5220),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "User State Process",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5220),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            WorkflowNameTitle = "user"
                        },
                        new
                        {
                            Id = new Guid("7a109642-9822-4081-87d7-c10da3c03ab5"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5250),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5250),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("52630f62-44a5-4cd4-9449-be84e1d4ce46"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5260),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-start"
                        },
                        new
                        {
                            Id = new Guid("18509d58-d078-4489-bb80-26b17c44209d"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5280),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5280),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("562ec477-718c-4105-9529-2e56a8e7040e"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5290),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5290),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-start"
                        },
                        new
                        {
                            Id = new Guid("ea427aff-69f5-4752-a987-aada72ae52a0"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5310),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5310),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("732608bc-8b2f-4fbe-9bad-7fc231d86ec6"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5320),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5320),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-active"
                        },
                        new
                        {
                            Id = new Guid("e457f5bf-12ac-4386-b4e7-4a7b970c59dd"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5330),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5330),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("932c215f-c869-45bd-8f9c-2728f495d8d3"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5350),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5350),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-active"
                        },
                        new
                        {
                            Id = new Guid("0dbdef0c-0843-433d-80ae-211aa3e75fc3"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5370),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis Baslangic Asamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5370),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("94450914-bd33-4980-972b-d44b4c37137e"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5380),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start State",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5380),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("d763a120-1070-4569-b0fc-bb52e96890c4"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5390),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Akis baslangic asama aciklamasi",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5390),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("dc983119-3890-4ebe-ac4a-3440e2ee40d5"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5400),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Start state description",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5400),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-suspended"
                        },
                        new
                        {
                            Id = new Guid("430a1f3f-3a7c-4cfc-aa57-60f9b7e88715"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5420),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktif",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5420),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("752d1f3b-3089-4982-829b-317edb68d10f"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5440),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5440),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameTitle = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("7a49d5ae-86ae-4acd-a0b9-4ae2b0cd48b9"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5450),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kayit deaktive edilmis",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5450),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("336e65f1-bf28-4c2d-8a1c-8af235e2de4f"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5480),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Record has been deactivated",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5480),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StateNameDescription = "user-deactivated"
                        },
                        new
                        {
                            Id = new Guid("94e34a21-f539-4af5-8a1b-f708b9aaa581"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5500),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Kaydi Tamamla",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5500),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("a734b74b-812a-4292-b6ab-69018f7654c4"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5510),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Register User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5510),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-register"
                        },
                        new
                        {
                            Id = new Guid("c0cc197a-d833-43c1-8dd9-c3ca2001ecc7"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5520),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5520),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("15d8f288-b043-4a58-be45-5f160b459f83"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5530),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5530),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-register"
                        },
                        new
                        {
                            Id = new Guid("8b577735-29a9-4548-b05d-a2b4f8f64b65"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5550),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Gecici Kitle",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5550),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("5b619244-1a07-41c7-b83b-2da91f25e15d"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5560),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Suspend User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5560),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("796078a0-5e5d-4b1d-acf5-d9f8fdf49428"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5570),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5570),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("e993aca9-f5d0-461b-8286-9c60b668913a"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5590),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5590),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-suspend"
                        },
                        new
                        {
                            Id = new Guid("d0789ad2-2838-47ac-872c-a9a8ae9ee1e1"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5600),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5600),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("14ced6d0-5fb5-4b86-8073-b8e1514cd5f4"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5620),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5620),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("d4470593-f5dd-4a6f-8872-c3e5eaa6927e"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5630),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5630),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("63fa3aaf-4a7d-4aa2-9b3b-c8cb5f2900b7"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5640),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5640),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-deactive"
                        },
                        new
                        {
                            Id = new Guid("4e3ffce8-65ca-44e9-8ae6-14507cb98e6d"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5660),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Pasif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5660),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("ee6b46f7-893c-4dfe-be73-5d33c02b62f5"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5670),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Deactive User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5670),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("7465741f-a398-49dd-a18b-0a3d15827bd8"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5680),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5680),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("67c2522d-921f-465d-ad34-cd5303bb10a8"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5690),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5700),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fs"
                        },
                        new
                        {
                            Id = new Guid("a5ab6b38-0c69-4ced-a0f4-f51a1f856512"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5720),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Kullanici Aktif Yap",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5720),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("15b85054-83d9-442b-b91c-b7d473d8e1ed"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5730),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "Activate User",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5730),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameTitle = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("7d312675-e717-471f-9011-a9744545beee"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5740),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...tr components... }",
                            Language = "tr-TR",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5740),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        },
                        new
                        {
                            Id = new Guid("e7b18b1b-e91c-4653-b093-069a44a22d37"),
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5750),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Label = "{ \"display\": \"form\" ...en components... }",
                            Language = "en-EN",
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5750),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TransitionNameForm = "user-activate-fd"
                        });
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.Property<Guid?>("WorkflowEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ZeebeFlowName")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("WorkflowEntityId");

                    b.HasIndex("ZeebeFlowName");

                    b.ToTable("Workflows");

                    b.HasData(
                        new
                        {
                            Name = "user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4550),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4550),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user", "security" },
                            ZeebeFlowName = "zb-user-reset-password"
                        },
                        new
                        {
                            Name = "user",
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5190),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5190),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Tags = new[] { "idm", "user" }
                        });
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AllowOnlyOneActiveInstance")
                        .HasColumnType("boolean");

                    b.Property<int>("AvailableInStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsStateManager")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowName");

                    b.ToTable("WorkflowEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9711773c-2a77-41fa-bd0d-9e8fd4532110"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4600),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = false,
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4600),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user-reset-password"
                        },
                        new
                        {
                            Id = new Guid("57b5e0ad-98ab-4e5d-9766-16dc1b086130"),
                            AllowOnlyOneActiveInstance = false,
                            AvailableInStatus = 30,
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5230),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsStateManager = true,
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(5230),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "user",
                            WorkflowName = "user"
                        });
                });

            modelBuilder.Entity("ZeebeFlow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAtomic")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.HasKey("Name");

                    b.ToTable("ZeebeFlow");

                    b.HasData(
                        new
                        {
                            Name = "zb-user-reset-password",
                            CreatedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4520),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Gateway = "https://127.0.0.1",
                            IsAtomic = false,
                            ModifiedAt = new DateTime(2023, 2, 18, 18, 42, 38, 819, DateTimeKind.Utc).AddTicks(4530),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Process = "<bpmn:process></bpmn:process>",
                            Tags = new[] { "idm", "user", "security" }
                        });
                });

            modelBuilder.Entity("Instance", b =>
                {
                    b.HasOne("State", "State")
                        .WithMany()
                        .HasForeignKey("StateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workflow", "Workflow")
                        .WithMany()
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("State");

                    b.Navigation("Workflow");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("InstanceEvent", b =>
                {
                    b.HasOne("InstanceTransition", "InstanceTransition")
                        .WithMany()
                        .HasForeignKey("InstanceTransitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstanceTransition");
                });

            modelBuilder.Entity("InstanceTransition", b =>
                {
                    b.HasOne("State", "FromState")
                        .WithMany()
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "OnEnterZeebeFlow")
                        .WithMany()
                        .HasForeignKey("OnEnterZeebeFlowName");

                    b.HasOne("ZeebeFlow", "OnExitZeebeFlow")
                        .WithMany()
                        .HasForeignKey("OnExitZeebeFlowName");

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("FromState");

                    b.Navigation("Instance");

                    b.Navigation("OnEnterZeebeFlow");

                    b.Navigation("OnExitZeebeFlow");

                    b.Navigation("ToState");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.HasOne("ZeebeFlow", "OnEntryFlow")
                        .WithMany()
                        .HasForeignKey("OnEntryFlowName");

                    b.HasOne("ZeebeFlow", "OnExitFlow")
                        .WithMany()
                        .HasForeignKey("OnExitFlowName");

                    b.HasOne("Workflow", "Workflow")
                        .WithMany("States")
                        .HasForeignKey("WorkflowName");

                    b.Navigation("OnEntryFlow");

                    b.Navigation("OnExitFlow");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.HasOne("ZeebeFlow", "Flow")
                        .WithMany()
                        .HasForeignKey("FlowName");

                    b.HasOne("State", "FromState")
                        .WithMany("Transitions")
                        .HasForeignKey("FromStateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateName");

                    b.Navigation("Flow");

                    b.Navigation("FromState");

                    b.Navigation("ToState");
                });

            modelBuilder.Entity("Translation", b =>
                {
                    b.HasOne("State", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("StateName_Description");

                    b.HasOne("State", null)
                        .WithMany("Titles")
                        .HasForeignKey("StateName_Title");

                    b.HasOne("Transition", null)
                        .WithMany("Forms")
                        .HasForeignKey("TransitionName_Form");

                    b.HasOne("Transition", null)
                        .WithMany("Titles")
                        .HasForeignKey("TransitionName_Title");

                    b.HasOne("Workflow", null)
                        .WithMany("Titles")
                        .HasForeignKey("WorkflowName_Title");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.HasOne("WorkflowEntity", null)
                        .WithMany("InclusiveWorkflows")
                        .HasForeignKey("WorkflowEntityId");

                    b.HasOne("ZeebeFlow", "ZeebeFlow")
                        .WithMany()
                        .HasForeignKey("ZeebeFlowName");

                    b.Navigation("ZeebeFlow");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.HasOne("Workflow", "Workflow")
                        .WithMany("Entities")
                        .HasForeignKey("WorkflowName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Navigation("Descriptions");

                    b.Navigation("Titles");

                    b.Navigation("Transitions");
                });

            modelBuilder.Entity("Transition", b =>
                {
                    b.Navigation("Forms");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("Workflow", b =>
                {
                    b.Navigation("Entities");

                    b.Navigation("States");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("WorkflowEntity", b =>
                {
                    b.Navigation("InclusiveWorkflows");
                });
#pragma warning restore 612, 618
        }
    }
}
